{"version":3,"file":"registerOnunhandledrejection.js","sourceRoot":"","sources":["../../../../src/instrumentations/errors/registerOnunhandledrejection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAuB,WAAW,EAAE,MAAM,oBAAoB,CAAC;AAGtE,OAAO,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,MAAM,SAAS,CAAC;AAC1E,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAC;AAGpD,MAAM,UAAU,4BAA4B,CAAC,GAAQ;IACnD,MAAM,CAAC,gBAAgB,CAAC,oBAAoB,EAAE,CAAC,GAAkC,EAAE,EAAE;;QACnF,IAAI,KAAK,GAAG,GAAG,CAAC;QAEhB,IAAI,KAAK,CAAC,MAAM,EAAE;YAChB,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC;SACpB;aAAM,IAAI,MAAA,GAAG,CAAC,MAAM,0CAAE,MAAM,EAAE;YAC7B,KAAK,GAAG,MAAA,GAAG,CAAC,MAAM,0CAAE,MAAM,CAAC;SAC5B;QAED,IAAI,KAAyB,CAAC;QAC9B,IAAI,IAAwB,CAAC;QAC7B,IAAI,WAAW,GAA0B,EAAE,CAAC;QAC5C,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;YACtB,KAAK,GAAG,GAAG,uBAAuB,IAAI,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC;YACtD,IAAI,GAAG,sBAAsB,CAAC;SAC/B;aAAM;YACL,CAAC,KAAK,EAAE,IAAI,EAAE,WAAW,CAAC,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC;SACrD;QAED,IAAI,KAAK,EAAE;YACT,GAAG,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;SACxD;IACH,CAAC,CAAC,CAAC;AACL,CAAC","sourcesContent":["import { ExceptionStackFrame, isPrimitive } from '@grafana/faro-core';\nimport type { API } from '@grafana/faro-core';\n\nimport { primitiveUnhandledType, primitiveUnhandledValue } from './const';\nimport { getErrorDetails } from './getErrorDetails';\nimport type { ExtendedPromiseRejectionEvent } from './types';\n\nexport function registerOnunhandledrejection(api: API): void {\n  window.addEventListener('unhandledrejection', (evt: ExtendedPromiseRejectionEvent) => {\n    let error = evt;\n\n    if (error.reason) {\n      error = evt.reason;\n    } else if (evt.detail?.reason) {\n      error = evt.detail?.reason;\n    }\n\n    let value: string | undefined;\n    let type: string | undefined;\n    let stackFrames: ExceptionStackFrame[] = [];\n    if (isPrimitive(error)) {\n      value = `${primitiveUnhandledValue} ${String(error)}`;\n      type = primitiveUnhandledType;\n    } else {\n      [value, type, stackFrames] = getErrorDetails(error);\n    }\n\n    if (value) {\n      api.pushError(new Error(value), { type, stackFrames });\n    }\n  });\n}\n"]}