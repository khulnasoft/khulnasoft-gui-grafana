{"version":3,"file":"meta.js","sourceRoot":"","sources":["../../../../src/metas/browser/meta.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,cAAc,CAAC;AAIxC,MAAM,CAAC,MAAM,WAAW,GAAoC,GAAG,EAAE;IAC/D,MAAM,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC9B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;IAC9C,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IAC5D,MAAM,SAAS,GAAG,MAAM,CAAC,KAAK,EAAE,CAAC;IACjC,MAAM,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;IACpC,MAAM,MAAM,GAAG,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IACpD,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,MAAM,OAAO,GAAG,SAAS,CAAC;IAE1B,OAAO;QACL,OAAO,EAAE;YACP,IAAI,EAAE,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,OAAO;YACrB,OAAO,EAAE,OAAO,aAAP,OAAO,cAAP,OAAO,GAAI,OAAO;YAC3B,EAAE,EAAE,GAAG,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,OAAO,IAAI,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,OAAO,EAAE;YAClD,SAAS,EAAE,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,OAAO;YAC/B,QAAQ,EAAE,QAAQ,aAAR,QAAQ,cAAR,QAAQ,GAAI,OAAO;YAC7B,MAAM;YACN,MAAM,EAAE,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,OAAO;YACzB,aAAa,EAAE,GAAG,MAAM,CAAC,UAAU,EAAE;YACrC,cAAc,EAAE,GAAG,MAAM,CAAC,WAAW,EAAE;SACxC;KACF,CAAC;IAEF,SAAS,SAAS;QAChB,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,eAAe,IAAI,SAAS,IAAI,SAAS,CAAC,aAAa,EAAE;YAC3D,iHAAiH;YACjH,OAAQ,SAAiB,CAAC,aAAa,CAAC,MAAM,CAAC;SAChD;QAED,OAAO,SAAS,CAAC;IACnB,CAAC;AACH,CAAC,CAAC","sourcesContent":["import { UAParser } from 'ua-parser-js';\n\nimport type { Meta, MetaBrowser, MetaItem } from '@grafana/faro-core';\n\nexport const browserMeta: MetaItem<Pick<Meta, 'browser'>> = () => {\n  const parser = new UAParser();\n  const { name, version } = parser.getBrowser();\n  const { name: osName, version: osVersion } = parser.getOS();\n  const userAgent = parser.getUA();\n  const language = navigator.language;\n  const mobile = navigator.userAgent.includes('Mobi');\n  const brands = getBrands();\n  const unknown = 'unknown';\n\n  return {\n    browser: {\n      name: name ?? unknown,\n      version: version ?? unknown,\n      os: `${osName ?? unknown} ${osVersion ?? unknown}`,\n      userAgent: userAgent ?? unknown,\n      language: language ?? unknown,\n      mobile,\n      brands: brands ?? unknown,\n      viewportWidth: `${window.innerWidth}`,\n      viewportHeight: `${window.innerHeight}`,\n    },\n  };\n\n  function getBrands(): MetaBrowser['brands'] | undefined {\n    if (!name || !version) {\n      return undefined;\n    }\n\n    if ('userAgentData' in navigator && navigator.userAgentData) {\n      // userAgentData in experimental (only Chrome supports it) thus TS does not ship the respective type declarations\n      return (navigator as any).userAgentData.brands;\n    }\n\n    return undefined;\n  }\n};\n"]}