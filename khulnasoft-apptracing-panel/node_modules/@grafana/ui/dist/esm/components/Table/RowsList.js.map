{"version":3,"file":"RowsList.js","sources":["../../../../src/components/Table/RowsList.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { CSSProperties, UIEventHandler, useCallback, useEffect, useMemo, useState } from 'react';\nimport { Cell, Row, TableState } from 'react-table';\nimport { VariableSizeList } from 'react-window';\nimport { Subscription, debounceTime } from 'rxjs';\n\nimport {\n  DataFrame,\n  DataHoverClearEvent,\n  DataHoverEvent,\n  Field,\n  FieldType,\n  TimeRange,\n  hasTimeField,\n} from '@grafana/data';\nimport { TableCellHeight } from '@grafana/schema';\n\nimport { useTheme2 } from '../../themes';\nimport CustomScrollbar from '../CustomScrollbar/CustomScrollbar';\nimport { usePanelContext } from '../PanelChrome';\n\nimport { ExpandedRow, getExpandedRowHeight } from './ExpandedRow';\nimport { TableCell } from './TableCell';\nimport { TableStyles } from './styles';\nimport { TableFilterActionCallback } from './types';\nimport { calculateAroundPointThreshold, isPointTimeValAroundTableTimeVal } from './utils';\n\ninterface RowsListProps {\n  data: DataFrame;\n  rows: Row[];\n  enableSharedCrosshair: boolean;\n  headerHeight: number;\n  rowHeight: number;\n  itemCount: number;\n  pageIndex: number;\n  listHeight: number;\n  width: number;\n  cellHeight?: TableCellHeight;\n  listRef: React.RefObject<VariableSizeList>;\n  tableState: TableState;\n  tableStyles: TableStyles;\n  nestedDataField?: Field;\n  prepareRow: (row: Row) => void;\n  onCellFilterAdded?: TableFilterActionCallback;\n  timeRange?: TimeRange;\n  footerPaginationEnabled: boolean;\n  initialRowIndex?: number;\n}\n\nexport const RowsList = (props: RowsListProps) => {\n  const {\n    data,\n    rows,\n    headerHeight,\n    footerPaginationEnabled,\n    rowHeight,\n    itemCount,\n    pageIndex,\n    tableState,\n    prepareRow,\n    onCellFilterAdded,\n    width,\n    cellHeight = TableCellHeight.Sm,\n    timeRange,\n    tableStyles,\n    nestedDataField,\n    listHeight,\n    listRef,\n    enableSharedCrosshair = false,\n    initialRowIndex = undefined,\n  } = props;\n\n  const [rowHighlightIndex, setRowHighlightIndex] = useState<number | undefined>(initialRowIndex);\n\n  const theme = useTheme2();\n  const panelContext = usePanelContext();\n\n  const threshold = useMemo(() => {\n    const timeField = data.fields.find((f) => f.type === FieldType.time);\n\n    if (!timeField) {\n      return 0;\n    }\n\n    return calculateAroundPointThreshold(timeField);\n  }, [data]);\n\n  const onRowHover = useCallback(\n    (idx: number, frame: DataFrame) => {\n      if (!panelContext || !enableSharedCrosshair || !hasTimeField(frame)) {\n        return;\n      }\n\n      const timeField: Field = frame!.fields.find((f) => f.type === FieldType.time)!;\n\n      panelContext.eventBus.publish(\n        new DataHoverEvent({\n          point: {\n            time: timeField.values[idx],\n          },\n        })\n      );\n    },\n    [enableSharedCrosshair, panelContext]\n  );\n\n  const onRowLeave = useCallback(() => {\n    if (!panelContext || !enableSharedCrosshair) {\n      return;\n    }\n\n    panelContext.eventBus.publish(new DataHoverClearEvent());\n  }, [enableSharedCrosshair, panelContext]);\n\n  const onDataHoverEvent = useCallback(\n    (evt: DataHoverEvent) => {\n      if (evt.payload.point?.time && evt.payload.rowIndex !== undefined) {\n        const timeField = data.fields.find((f) => f.type === FieldType.time);\n        const time = timeField!.values[evt.payload.rowIndex];\n        const pointTime = evt.payload.point.time;\n\n        // If the time value of the hovered point is around the time value of the\n        // row with same index, highlight the row\n        if (isPointTimeValAroundTableTimeVal(pointTime, time, threshold)) {\n          setRowHighlightIndex(evt.payload.rowIndex);\n          return;\n        }\n\n        // If the time value of the hovered point is not around the time value of the\n        // row with same index, try to find a row with same time value\n        const matchedRowIndex = timeField!.values.findIndex((t) =>\n          isPointTimeValAroundTableTimeVal(pointTime, t, threshold)\n        );\n\n        if (matchedRowIndex !== -1) {\n          setRowHighlightIndex(matchedRowIndex);\n          return;\n        }\n\n        setRowHighlightIndex(undefined);\n      }\n    },\n    [data.fields, threshold]\n  );\n\n  useEffect(() => {\n    if (!panelContext || !enableSharedCrosshair || !hasTimeField(data) || footerPaginationEnabled) {\n      return;\n    }\n\n    const subs = new Subscription();\n\n    subs.add(\n      panelContext.eventBus\n        .getStream(DataHoverEvent)\n        .pipe(debounceTime(250))\n        .subscribe({\n          next: (evt) => {\n            if (panelContext.eventBus === evt.origin) {\n              return;\n            }\n\n            onDataHoverEvent(evt);\n          },\n        })\n    );\n\n    subs.add(\n      panelContext.eventBus\n        .getStream(DataHoverClearEvent)\n        .pipe(debounceTime(250))\n        .subscribe({\n          next: (evt) => {\n            if (panelContext.eventBus === evt.origin) {\n              return;\n            }\n\n            setRowHighlightIndex(undefined);\n          },\n        })\n    );\n\n    return () => {\n      subs.unsubscribe();\n    };\n  }, [data, enableSharedCrosshair, footerPaginationEnabled, onDataHoverEvent, panelContext]);\n\n  let scrollTop: number | undefined = undefined;\n  if (rowHighlightIndex !== undefined) {\n    const firstMatchedRowIndex = rows.findIndex((row) => row.index === rowHighlightIndex);\n\n    if (firstMatchedRowIndex !== -1) {\n      scrollTop = headerHeight + (firstMatchedRowIndex - 1) * rowHeight;\n    }\n  }\n\n  const rowIndexForPagination = useCallback(\n    (index: number) => {\n      return tableState.pageIndex * tableState.pageSize + index;\n    },\n    [tableState.pageIndex, tableState.pageSize]\n  );\n\n  const RenderRow = useCallback(\n    ({ index, style, rowHighlightIndex }: { index: number; style: CSSProperties; rowHighlightIndex?: number }) => {\n      const indexForPagination = rowIndexForPagination(index);\n      const row = rows[indexForPagination];\n      let additionalProps: React.HTMLAttributes<HTMLDivElement> = {};\n\n      prepareRow(row);\n\n      const expandedRowStyle = tableState.expanded[row.id] ? css({ '&:hover': { background: 'inherit' } }) : {};\n\n      if (rowHighlightIndex !== undefined && row.index === rowHighlightIndex) {\n        style = { ...style, backgroundColor: theme.components.table.rowHoverBackground };\n        additionalProps = {\n          'aria-selected': 'true',\n        };\n      }\n      return (\n        <div\n          {...row.getRowProps({ style, ...additionalProps })}\n          className={cx(tableStyles.row, expandedRowStyle)}\n          onMouseEnter={() => onRowHover(index, data)}\n          onMouseLeave={onRowLeave}\n        >\n          {/*add the nested data to the DOM first to prevent a 1px border CSS issue on the last cell of the row*/}\n          {nestedDataField && tableState.expanded[row.id] && (\n            <ExpandedRow\n              nestedData={nestedDataField}\n              tableStyles={tableStyles}\n              rowIndex={index}\n              width={width}\n              cellHeight={cellHeight}\n            />\n          )}\n          {row.cells.map((cell: Cell, index: number) => (\n            <TableCell\n              key={index}\n              tableStyles={tableStyles}\n              cell={cell}\n              onCellFilterAdded={onCellFilterAdded}\n              columnIndex={index}\n              columnCount={row.cells.length}\n              timeRange={timeRange}\n              frame={data}\n            />\n          ))}\n        </div>\n      );\n    },\n    [\n      cellHeight,\n      data,\n      nestedDataField,\n      onCellFilterAdded,\n      onRowHover,\n      onRowLeave,\n      prepareRow,\n      rowIndexForPagination,\n      rows,\n      tableState.expanded,\n      tableStyles,\n      theme.components.table.rowHoverBackground,\n      timeRange,\n      width,\n    ]\n  );\n\n  const getItemSize = (index: number): number => {\n    const indexForPagination = rowIndexForPagination(index);\n    const row = rows[indexForPagination];\n    if (tableState.expanded[row.id] && nestedDataField) {\n      return getExpandedRowHeight(nestedDataField, index, tableStyles);\n    }\n\n    return tableStyles.rowHeight;\n  };\n\n  const handleScroll: UIEventHandler = (event) => {\n    const { scrollTop } = event.currentTarget;\n\n    if (listRef.current !== null) {\n      listRef.current.scrollTo(scrollTop);\n    }\n  };\n\n  return (\n    <>\n      <CustomScrollbar onScroll={handleScroll} hideHorizontalTrack={true} scrollTop={scrollTop}>\n        <VariableSizeList\n          // This component needs an unmount/remount when row height or page changes\n          key={rowHeight + pageIndex}\n          height={listHeight}\n          itemCount={itemCount}\n          itemSize={getItemSize}\n          width={'100%'}\n          ref={listRef}\n          style={{ overflow: undefined }}\n        >\n          {({ index, style }) => RenderRow({ index, style, rowHighlightIndex })}\n        </VariableSizeList>\n      </CustomScrollbar>\n    </>\n  );\n};\n"],"names":["rowHighlightIndex","React","index","scrollTop"],"mappings":"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"}