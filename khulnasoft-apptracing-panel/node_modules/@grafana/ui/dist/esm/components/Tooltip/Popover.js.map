{"version":3,"file":"Popover.js","sources":["../../../../src/components/Tooltip/Popover.tsx"],"sourcesContent":["ï»¿import { Placement, VirtualElement } from '@popperjs/core';\nimport React, { PureComponent } from 'react';\nimport { Manager, Popper as ReactPopper, PopperArrowProps } from 'react-popper';\nimport Transition from 'react-transition-group/Transition';\n\nimport { Portal } from '../Portal/Portal';\n\nimport { PopoverContent } from './types';\n\nconst defaultTransitionStyles = {\n  transitionProperty: 'opacity',\n  transitionDuration: '200ms',\n  transitionTimingFunction: 'linear',\n  opacity: 0,\n};\n\nconst transitionStyles: { [key: string]: object } = {\n  exited: { opacity: 0 },\n  entering: { opacity: 0 },\n  entered: { opacity: 1, transitionDelay: '0s' },\n  exiting: { opacity: 0, transitionDelay: '500ms' },\n};\n\nexport type RenderPopperArrowFn = (props: { arrowProps: PopperArrowProps; placement: string }) => JSX.Element;\n\ninterface Props extends Omit<React.HTMLAttributes<HTMLDivElement>, 'content'> {\n  show: boolean;\n  placement?: Placement;\n  content: PopoverContent;\n  referenceElement: HTMLElement | VirtualElement;\n  wrapperClassName?: string;\n  renderArrow?: RenderPopperArrowFn;\n}\n\nclass Popover extends PureComponent<Props> {\n  render() {\n    const { content, show, placement, className, wrapperClassName, renderArrow, referenceElement, ...rest } =\n      this.props;\n\n    return (\n      <Manager>\n        <Transition in={show} timeout={100} mountOnEnter={true} unmountOnExit={true}>\n          {(transitionState) => {\n            return (\n              <Portal>\n                <ReactPopper\n                  placement={placement}\n                  referenceElement={referenceElement}\n                  modifiers={[\n                    { name: 'preventOverflow', enabled: true, options: { rootBoundary: 'viewport' } },\n                    {\n                      name: 'eventListeners',\n                      options: { scroll: true, resize: true },\n                    },\n                  ]}\n                >\n                  {({ ref, style, placement, arrowProps, update }) => {\n                    return (\n                      <div\n                        ref={ref}\n                        style={{\n                          ...style,\n                          ...defaultTransitionStyles,\n                          ...transitionStyles[transitionState],\n                        }}\n                        data-placement={placement}\n                        className={`${wrapperClassName}`}\n                        {...rest}\n                      >\n                        <div className={className}>\n                          {typeof content === 'string' && content}\n                          {React.isValidElement(content) && React.cloneElement(content)}\n                          {typeof content === 'function' &&\n                            content({\n                              updatePopperPosition: update,\n                            })}\n                          {renderArrow &&\n                            renderArrow({\n                              arrowProps,\n                              placement,\n                            })}\n                        </div>\n                      </div>\n                    );\n                  }}\n                </ReactPopper>\n              </Portal>\n            );\n          }}\n        </Transition>\n      </Manager>\n    );\n  }\n}\n\nexport { Popover };\n"],"names":["React","ReactPopper","placement"],"mappings":"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"}