{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../src/api/logs/types.ts"],"names":[],"mappings":"","sourcesContent":["import type { SpanContext } from '@opentelemetry/api';\n\nimport type { LogLevel } from '../../utils';\nimport type { TraceContext } from '../traces';\n\nexport type LogContext = Record<string, string>;\n\nexport interface LogEvent {\n  context: LogContext;\n  level: LogLevel;\n  message: string;\n  timestamp: string;\n\n  trace?: TraceContext;\n}\n\nexport interface PushLogOptions {\n  context?: LogContext;\n  level?: LogLevel;\n  skipDedupe?: boolean;\n  spanContext?: Pick<SpanContext, 'traceId' | 'spanId'>;\n}\n\nexport interface LogsAPI {\n  pushLog: (args: unknown[], options?: PushLogOptions) => void;\n}\n\nexport type LogArgsSerializer = (args: unknown[]) => string;\n"]}