import { BaseTransport, PromiseBuffer } from '@grafana/faro-core';
import type { TransportItem } from '@grafana/faro-core';
import type { FetchTransportOptions } from './types';
export declare class FetchTransport extends BaseTransport {
    private options;
    readonly name = "@grafana/faro-web-sdk:transport-fetch";
    readonly version = "1.0.0-beta1";
    promiseBuffer: PromiseBuffer<Response | void>;
    private rateLimitBackoffMs;
    private getNow;
    private disabledUntil;
    constructor(options: FetchTransportOptions);
    send(item: TransportItem): Promise<void>;
    getIgnoreUrls(): Array<string | RegExp>;
    private getRetryAfterDate;
}
