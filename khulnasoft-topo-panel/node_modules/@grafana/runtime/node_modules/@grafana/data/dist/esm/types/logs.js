var LogLevel = /* @__PURE__ */ ((LogLevel2) => {
  LogLevel2["emerg"] = "critical";
  LogLevel2["fatal"] = "critical";
  LogLevel2["alert"] = "critical";
  LogLevel2["crit"] = "critical";
  LogLevel2["critical"] = "critical";
  LogLevel2["warn"] = "warning";
  LogLevel2["warning"] = "warning";
  LogLevel2["err"] = "error";
  LogLevel2["eror"] = "error";
  LogLevel2["error"] = "error";
  LogLevel2["info"] = "info";
  LogLevel2["information"] = "info";
  LogLevel2["informational"] = "info";
  LogLevel2["notice"] = "info";
  LogLevel2["dbug"] = "debug";
  LogLevel2["debug"] = "debug";
  LogLevel2["trace"] = "trace";
  LogLevel2["unknown"] = "unknown";
  return LogLevel2;
})(LogLevel || {});
var LogsMetaKind = /* @__PURE__ */ ((LogsMetaKind2) => {
  LogsMetaKind2[LogsMetaKind2["Number"] = 0] = "Number";
  LogsMetaKind2[LogsMetaKind2["String"] = 1] = "String";
  LogsMetaKind2[LogsMetaKind2["LabelsMap"] = 2] = "LabelsMap";
  LogsMetaKind2[LogsMetaKind2["Error"] = 3] = "Error";
  return LogsMetaKind2;
})(LogsMetaKind || {});
var LogsSortOrder = /* @__PURE__ */ ((LogsSortOrder2) => {
  LogsSortOrder2["Descending"] = "Descending";
  LogsSortOrder2["Ascending"] = "Ascending";
  return LogsSortOrder2;
})(LogsSortOrder || {});
var LogsDedupStrategy = /* @__PURE__ */ ((LogsDedupStrategy2) => {
  LogsDedupStrategy2["none"] = "none";
  LogsDedupStrategy2["exact"] = "exact";
  LogsDedupStrategy2["numbers"] = "numbers";
  LogsDedupStrategy2["signature"] = "signature";
  return LogsDedupStrategy2;
})(LogsDedupStrategy || {});
var LogsDedupDescription = /* @__PURE__ */ ((LogsDedupDescription2) => {
  LogsDedupDescription2["none"] = "No de-duplication";
  LogsDedupDescription2["exact"] = "De-duplication of successive lines that are identical, ignoring ISO datetimes.";
  LogsDedupDescription2["numbers"] = "De-duplication of successive lines that are identical when ignoring numbers, e.g., IP addresses, latencies.";
  LogsDedupDescription2["signature"] = "De-duplication of successive lines that have identical punctuation and whitespace.";
  return LogsDedupDescription2;
})(LogsDedupDescription || {});
const hasLogsContextSupport = (datasource) => {
  if (!datasource) {
    return false;
  }
  const withLogsSupport = datasource;
  return withLogsSupport.getLogRowContext !== void 0 && withLogsSupport.showContextToggle !== void 0;
};

export { LogLevel, LogsDedupDescription, LogsDedupStrategy, LogsMetaKind, LogsSortOrder, hasLogsContextSupport };
//# sourceMappingURL=logs.js.map
