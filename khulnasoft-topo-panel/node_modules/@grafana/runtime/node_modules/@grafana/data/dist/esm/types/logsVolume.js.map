{"version":3,"file":"logsVolume.js","sources":["../../../src/types/logsVolume.ts"],"sourcesContent":["import { Observable } from 'rxjs';\n\nimport { DataQueryRequest, DataQueryResponse } from './datasource';\nimport { DataQuery } from './query';\n\n/**\n * TODO: This should be added to ./logs.ts but because of cross reference between ./datasource.ts and ./logs.ts it can\n * be done only after decoupling \"logs\" from \"datasource\" (https://github.com/grafana/grafana/pull/39536)\n *\n * @internal\n */\nexport interface DataSourceWithLogsVolumeSupport<TQuery extends DataQuery> {\n  getLogsVolumeDataProvider(request: DataQueryRequest<TQuery>): Observable<DataQueryResponse> | undefined;\n}\n\n/**\n * @internal\n */\nexport const hasLogsVolumeSupport = <TQuery extends DataQuery>(\n  datasource: unknown\n): datasource is DataSourceWithLogsVolumeSupport<TQuery> => {\n  return (datasource as DataSourceWithLogsVolumeSupport<TQuery>).getLogsVolumeDataProvider !== undefined;\n};\n"],"names":[],"mappings":"AAkBa,MAAA,oBAAA,GAAuB,CAClC,UAC0D,KAAA;AAC1D,EAAA,OAAQ,WAAuD,yBAA8B,KAAA,KAAA,CAAA,CAAA;AAC/F;;;;"}