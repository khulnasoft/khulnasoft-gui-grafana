{"version":3,"file":"arithmeticFormatters.js","sources":["../../../src/valueFormats/arithmeticFormatters.ts"],"sourcesContent":["import { DecimalCount } from '../types/displayValue';\n\nimport { toFixed, FormattedValue } from './valueFormats';\n\nexport function toPercent(size: number, decimals: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n  return { text: toFixed(size, decimals), suffix: '%' };\n}\n\nexport function toPercentUnit(size: number, decimals: DecimalCount): FormattedValue {\n  if (size === null) {\n    return { text: '' };\n  }\n  return { text: toFixed(100 * size, decimals), suffix: '%' };\n}\n\nexport function toHex0x(value: number, decimals: DecimalCount): FormattedValue {\n  if (value == null) {\n    return { text: '' };\n  }\n  const asHex = toHex(value, decimals);\n  if (asHex.text.substring(0, 1) === '-') {\n    asHex.text = '-0x' + asHex.text.substring(1);\n  } else {\n    asHex.text = '0x' + asHex.text;\n  }\n  return asHex;\n}\n\nexport function toHex(value: number, decimals: DecimalCount): FormattedValue {\n  if (value == null) {\n    return { text: '' };\n  }\n  return {\n    text: parseFloat(toFixed(value, decimals)).toString(16).toUpperCase(),\n  };\n}\n\nexport function sci(value: number, decimals: DecimalCount): FormattedValue {\n  if (value == null) {\n    return { text: '' };\n  }\n  return { text: value.toExponential(decimals as number) };\n}\n"],"names":[],"mappings":";;AAIgB,SAAA,SAAA,CAAU,MAAc,QAAwC,EAAA;AAC9E,EAAA,IAAI,SAAS,IAAM,EAAA;AACjB,IAAO,OAAA,EAAE,MAAM,EAAG,EAAA,CAAA;AAAA,GACpB;AACA,EAAA,OAAO,EAAE,IAAM,EAAA,OAAA,CAAQ,MAAM,QAAQ,CAAA,EAAG,QAAQ,GAAI,EAAA,CAAA;AACtD,CAAA;AAEgB,SAAA,aAAA,CAAc,MAAc,QAAwC,EAAA;AAClF,EAAA,IAAI,SAAS,IAAM,EAAA;AACjB,IAAO,OAAA,EAAE,MAAM,EAAG,EAAA,CAAA;AAAA,GACpB;AACA,EAAO,OAAA,EAAE,MAAM,OAAQ,CAAA,GAAA,GAAM,MAAM,QAAQ,CAAA,EAAG,QAAQ,GAAI,EAAA,CAAA;AAC5D,CAAA;AAEgB,SAAA,OAAA,CAAQ,OAAe,QAAwC,EAAA;AAC7E,EAAA,IAAI,SAAS,IAAM,EAAA;AACjB,IAAO,OAAA,EAAE,MAAM,EAAG,EAAA,CAAA;AAAA,GACpB;AACA,EAAM,MAAA,KAAA,GAAQ,KAAM,CAAA,KAAA,EAAO,QAAQ,CAAA,CAAA;AACnC,EAAA,IAAI,MAAM,IAAK,CAAA,SAAA,CAAU,CAAG,EAAA,CAAC,MAAM,GAAK,EAAA;AACtC,IAAA,KAAA,CAAM,IAAO,GAAA,KAAA,GAAQ,KAAM,CAAA,IAAA,CAAK,UAAU,CAAC,CAAA,CAAA;AAAA,GACtC,MAAA;AACL,IAAM,KAAA,CAAA,IAAA,GAAO,OAAO,KAAM,CAAA,IAAA,CAAA;AAAA,GAC5B;AACA,EAAO,OAAA,KAAA,CAAA;AACT,CAAA;AAEgB,SAAA,KAAA,CAAM,OAAe,QAAwC,EAAA;AAC3E,EAAA,IAAI,SAAS,IAAM,EAAA;AACjB,IAAO,OAAA,EAAE,MAAM,EAAG,EAAA,CAAA;AAAA,GACpB;AACA,EAAO,OAAA;AAAA,IACL,IAAA,EAAM,UAAW,CAAA,OAAA,CAAQ,KAAO,EAAA,QAAQ,CAAC,CAAE,CAAA,QAAA,CAAS,EAAE,CAAA,CAAE,WAAY,EAAA;AAAA,GACtE,CAAA;AACF,CAAA;AAEgB,SAAA,GAAA,CAAI,OAAe,QAAwC,EAAA;AACzE,EAAA,IAAI,SAAS,IAAM,EAAA;AACjB,IAAO,OAAA,EAAE,MAAM,EAAG,EAAA,CAAA;AAAA,GACpB;AACA,EAAA,OAAO,EAAE,IAAA,EAAM,KAAM,CAAA,aAAA,CAAc,QAAkB,CAAE,EAAA,CAAA;AACzD;;;;"}