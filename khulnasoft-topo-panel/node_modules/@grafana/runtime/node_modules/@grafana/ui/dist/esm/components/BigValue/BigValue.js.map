{"version":3,"file":"BigValue.js","sources":["../../../../src/components/BigValue/BigValue.tsx"],"sourcesContent":["import { cx } from '@emotion/css';\nimport React, { PureComponent } from 'react';\n\nimport { DisplayValue, DisplayValueAlignmentFactors, FieldSparkline, VizOrientation } from '@grafana/data';\nimport { VizTextDisplayOptions } from '@grafana/schema';\n\nimport { Themeable2 } from '../../types';\nimport { clearButtonStyles } from '../Button';\nimport { FormattedValueDisplay } from '../FormattedValueDisplay/FormattedValueDisplay';\n\nimport { buildLayout } from './BigValueLayout';\n\nexport enum BigValueColorMode {\n  Value = 'value',\n  Background = 'background',\n  None = 'none',\n}\n\nexport enum BigValueGraphMode {\n  None = 'none',\n  Line = 'line',\n  Area = 'area',\n}\n\nexport enum BigValueJustifyMode {\n  Auto = 'auto',\n  Center = 'center',\n}\n\n/**\n * Options for how the value & title are to be displayed\n */\nexport enum BigValueTextMode {\n  Auto = 'auto',\n  Value = 'value',\n  ValueAndName = 'value_and_name',\n  Name = 'name',\n  None = 'none',\n}\n\nexport interface Props extends Themeable2 {\n  /** Height of the component */\n  height: number;\n  /** Width of the component */\n  width: number;\n  /** Value displayed as Big Value */\n  value: DisplayValue;\n  /** Sparkline values for showing a graph under/behind the value  */\n  sparkline?: FieldSparkline;\n  /** onClick handler for the value */\n  onClick?: React.MouseEventHandler<HTMLElement>;\n  /** Custom styling */\n  className?: string;\n  /** Color mode for coloring the value or the background */\n  colorMode: BigValueColorMode;\n  /** Show a graph behind/under the value */\n  graphMode: BigValueGraphMode;\n  /** Auto justify value and text or center it */\n  justifyMode?: BigValueJustifyMode;\n  /** Factors that should influence the positioning of the text  */\n  alignmentFactors?: DisplayValueAlignmentFactors;\n  /** Explicit font size control */\n  text?: VizTextDisplayOptions;\n  /** Specify which text should be visible in the BigValue */\n  textMode?: BigValueTextMode;\n  /** If true disables the tooltip */\n  hasLinks?: boolean;\n  /** The orientation of the parent container */\n  parentOrientation?: VizOrientation;\n\n  /**\n   * If part of a series of stat panes, this is the total number.\n   * Used by BigValueTextMode.Auto text mode.\n   */\n  count?: number;\n}\n\nexport class BigValue extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    justifyMode: BigValueJustifyMode.Auto,\n  };\n\n  render() {\n    const { onClick, className, hasLinks, theme } = this.props;\n    const layout = buildLayout(this.props);\n    const panelStyles = layout.getPanelStyles();\n    const valueAndTitleContainerStyles = layout.getValueAndTitleContainerStyles();\n    const valueStyles = layout.getValueStyles();\n    const titleStyles = layout.getTitleStyles();\n    const textValues = layout.textValues;\n\n    // When there is an outer data link this tooltip will override the outer native tooltip\n    const tooltip = hasLinks ? undefined : textValues.tooltip;\n\n    if (!onClick) {\n      return (\n        <div className={className} style={panelStyles} title={tooltip}>\n          <div style={valueAndTitleContainerStyles}>\n            {textValues.title && <div style={titleStyles}>{textValues.title}</div>}\n            <FormattedValueDisplay value={textValues} style={valueStyles} />\n          </div>\n          {layout.renderChart()}\n        </div>\n      );\n    }\n\n    return (\n      <button\n        type=\"button\"\n        className={cx(clearButtonStyles(theme), className)}\n        style={panelStyles}\n        onClick={onClick}\n        title={tooltip}\n      >\n        <div style={valueAndTitleContainerStyles}>\n          {textValues.title && <div style={titleStyles}>{textValues.title}</div>}\n          <FormattedValueDisplay value={textValues} style={valueStyles} />\n        </div>\n        {layout.renderChart()}\n      </button>\n    );\n  }\n}\n"],"names":["BigValueColorMode","BigValueGraphMode","BigValueJustifyMode","BigValueTextMode","React"],"mappings":"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"}