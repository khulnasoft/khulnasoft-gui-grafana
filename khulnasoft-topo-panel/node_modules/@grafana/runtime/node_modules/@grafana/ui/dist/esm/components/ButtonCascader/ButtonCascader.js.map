{"version":3,"file":"ButtonCascader.js","sources":["../../../../src/components/ButtonCascader/ButtonCascader.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport RCCascader from 'rc-cascader';\nimport React from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, useTheme2 } from '../../themes';\nimport { IconName } from '../../types/icon';\nimport { Button, ButtonProps } from '../Button';\nimport { CascaderOption } from '../Cascader/Cascader';\nimport { onChangeCascader, onLoadDataCascader } from '../Cascader/optionMappings';\nimport { Icon } from '../Icon/Icon';\n\nexport interface ButtonCascaderProps {\n  options: CascaderOption[];\n  children?: string;\n  icon?: IconName;\n  disabled?: boolean;\n  value?: string[];\n  fieldNames?: { label: string; value: string; children: string };\n  loadData?: (selectedOptions: CascaderOption[]) => void;\n  onChange?: (value: string[], selectedOptions: CascaderOption[]) => void;\n  onPopupVisibleChange?: (visible: boolean) => void;\n  className?: string;\n  variant?: ButtonProps['variant'];\n  buttonProps?: ButtonProps;\n  hideDownIcon?: boolean;\n}\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    popup: css`\n      label: popup;\n      z-index: ${theme.zIndex.dropdown};\n    `,\n    icons: {\n      right: css`\n        margin: 1px 0 0 4px;\n      `,\n      left: css`\n        margin: -1px 4px 0 0;\n      `,\n    },\n  };\n});\n\nexport const ButtonCascader: React.FC<ButtonCascaderProps> = (props) => {\n  const { onChange, className, loadData, icon, buttonProps, hideDownIcon, variant, disabled, ...rest } = props;\n  const theme = useTheme2();\n  const styles = getStyles(theme);\n\n  // Weird way to do this bit it goes around a styling issue in Button where even null/undefined child triggers\n  // styling change which messes up the look if there is only single icon content.\n  let content: any = props.children;\n  if (!hideDownIcon) {\n    content = [props.children, <Icon key={'down-icon'} name=\"angle-down\" className={styles.icons.right} />];\n  }\n\n  return (\n    <RCCascader\n      onChange={onChangeCascader(onChange)}\n      loadData={onLoadDataCascader(loadData)}\n      dropdownClassName={styles.popup}\n      {...rest}\n      expandIcon={null}\n    >\n      <Button icon={icon} disabled={disabled} variant={variant} {...(buttonProps ?? {})}>\n        {content}\n      </Button>\n    </RCCascader>\n  );\n};\n\nButtonCascader.displayName = 'ButtonCascader';\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA,MAAM,SAAA,GAAY,aAAc,CAAA,CAAC,KAAyB,KAAA;AACxD,EAAO,OAAA;AAAA,IACL,KAAO,EAAA,GAAA,CAAA;AAAA;AAAA,eAAA,EAEM,MAAM,MAAO,CAAA,QAAA,CAAA;AAAA,IAAA,CAAA;AAAA,IAE1B,KAAO,EAAA;AAAA,MACL,KAAO,EAAA,GAAA,CAAA;AAAA;AAAA,MAAA,CAAA;AAAA,MAGP,IAAM,EAAA,GAAA,CAAA;AAAA;AAAA,MAAA,CAAA;AAAA,KAGR;AAAA,GACF,CAAA;AACF,CAAC,CAAA,CAAA;AAEY,MAAA,cAAA,GAAgD,CAAC,KAAU,KAAA;AACtE,EAAuG,MAAA,EAAA,GAAA,KAAA,EAA/F,YAAU,SAAW,EAAA,QAAA,EAAU,MAAM,WAAa,EAAA,YAAA,EAAc,SAAS,QA/CnF,EAAA,GA+CyG,IAAT,IAAS,GAAA,SAAA,CAAA,EAAA,EAAT,CAAtF,UAAU,EAAA,WAAA,EAAW,YAAU,MAAM,EAAA,aAAA,EAAa,gBAAc,SAAS,EAAA,UAAA,CAAA,CAAA,CAAA;AACjF,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AACxB,EAAM,MAAA,MAAA,GAAS,UAAU,KAAK,CAAA,CAAA;AAI9B,EAAA,IAAI,UAAe,KAAM,CAAA,QAAA,CAAA;AACzB,EAAA,IAAI,CAAC,YAAc,EAAA;AACjB,IAAU,OAAA,GAAA,CAAC,KAAM,CAAA,QAAA,kBAAWA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAA,MAAK,GAAK,EAAA,WAAA;AAAA,MAAa,IAAK,EAAA,YAAA;AAAA,MAAa,SAAA,EAAW,OAAO,KAAM,CAAA,KAAA;AAAA,KAAO,CAAE,CAAA,CAAA;AAAA,GACxG;AAEA,EAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA,aAAA,CAAA,cAAA,CAAA;AAAA,IACC,QAAA,EAAU,iBAAiB,QAAQ,CAAA;AAAA,IACnC,QAAA,EAAU,mBAAmB,QAAQ,CAAA;AAAA,IACrC,mBAAmB,MAAO,CAAA,KAAA;AAAA,GAAA,EACtB,IAJL,CAAA,EAAA;AAAA,IAKC,UAAY,EAAA,IAAA;AAAA,GAAA,CAAA,kBAEXA,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA,cAAA,CAAA;AAAA,IAAO,IAAA;AAAA,IAAY,QAAA;AAAA,IAAoB,OAAA;AAAA,GAAA,EAAuB,WAAe,IAAA,IAAA,GAAA,WAAA,GAAA,EAC3E,CAAA,EAAA,OACH,CACF,CAAA,CAAA;AAEJ,EAAA;AAEA,cAAA,CAAe,WAAc,GAAA,gBAAA;;;;"}