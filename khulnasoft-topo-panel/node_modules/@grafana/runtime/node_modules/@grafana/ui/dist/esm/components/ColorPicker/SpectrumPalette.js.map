{"version":3,"file":"SpectrumPalette.js","sources":["../../../../src/components/ColorPicker/SpectrumPalette.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useMemo, useState } from 'react';\nimport { RgbaStringColorPicker } from 'react-colorful';\nimport { useThrottleFn } from 'react-use';\nimport tinycolor from 'tinycolor2';\n\nimport { GrafanaTheme2, colorManipulator } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\n\nimport ColorInput from './ColorInput';\n\nexport interface SpectrumPaletteProps {\n  color: string;\n  onChange: (color: string) => void;\n}\n\nconst SpectrumPalette: React.FunctionComponent<SpectrumPaletteProps> = ({ color, onChange }) => {\n  const [currentColor, setColor] = useState(color);\n\n  useThrottleFn(\n    (c) => {\n      onChange(colorManipulator.asHexString(theme.visualization.getColorByName(c)));\n    },\n    500,\n    [currentColor]\n  );\n\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  const rgbaString = useMemo(() => {\n    return currentColor.startsWith('rgba')\n      ? currentColor\n      : tinycolor(theme.visualization.getColorByName(color)).toRgbString();\n  }, [currentColor, theme, color]);\n\n  return (\n    <div className={styles.wrapper}>\n      <RgbaStringColorPicker className={styles.root} color={rgbaString} onChange={setColor} />\n      <ColorInput theme={theme} color={rgbaString} onChange={setColor} className={styles.colorInput} />\n    </div>\n  );\n};\n\nexport const getStyles = (theme: GrafanaTheme2) => ({\n  wrapper: css`\n    flex-grow: 1;\n  `,\n  root: css`\n    &.react-colorful {\n      width: auto;\n    }\n\n    .react-colorful {\n      &__saturation {\n        border-radius: ${theme.shape.borderRadius(1)} ${theme.shape.borderRadius(1)} 0 0;\n      }\n      &__alpha {\n        border-radius: 0 0 ${theme.shape.borderRadius(1)} ${theme.shape.borderRadius(1)};\n      }\n      &__alpha,\n      &__hue {\n        height: ${theme.spacing(2)};\n        position: relative;\n      }\n      &__pointer {\n        height: ${theme.spacing(2)};\n        width: ${theme.spacing(2)};\n      }\n    }\n  `,\n  colorInput: css`\n    margin-top: ${theme.spacing(2)};\n  `,\n});\n\nexport default SpectrumPalette;\n"],"names":["React"],"mappings":";;;;;;;;;;;AAiBA,MAAM,eAAiE,GAAA,CAAC,EAAE,KAAA,EAAO,UAAe,KAAA;AAC9F,EAAA,MAAM,CAAC,YAAA,EAAc,QAAQ,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AAE/C,EAAA,aAAA;AAAA,IACE,CAAC,CAAM,KAAA;AACL,MAAA,QAAA,CAAS,iBAAiB,WAAY,CAAA,KAAA,CAAM,cAAc,cAAe,CAAA,CAAC,CAAC,CAAC,CAAA,CAAA;AAAA,KAC9E;AAAA,IACA,GAAA;AAAA,IACA,CAAC,YAAY,CAAA;AAAA,GACf,CAAA;AAEA,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AACxB,EAAM,MAAA,MAAA,GAAS,WAAW,SAAS,CAAA,CAAA;AAEnC,EAAM,MAAA,UAAA,GAAa,QAAQ,MAAM;AAC/B,IAAA,OAAO,YAAa,CAAA,UAAA,CAAW,MAAM,CAAA,GACjC,YACA,GAAA,SAAA,CAAU,KAAM,CAAA,aAAA,CAAc,cAAe,CAAA,KAAK,CAAC,CAAA,CAAE,WAAY,EAAA,CAAA;AAAA,GACpE,EAAA,CAAC,YAAc,EAAA,KAAA,EAAO,KAAK,CAAC,CAAA,CAAA;AAE/B,EAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,IAAI,WAAW,MAAO,CAAA,OAAA;AAAA,GAAA,kBACpBA,cAAA,CAAA,aAAA,CAAA,qBAAA,EAAA;AAAA,IAAsB,WAAW,MAAO,CAAA,IAAA;AAAA,IAAM,KAAO,EAAA,UAAA;AAAA,IAAY,QAAU,EAAA,QAAA;AAAA,GAAU,mBACrFA,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAA,IAAW,KAAA;AAAA,IAAc,KAAO,EAAA,UAAA;AAAA,IAAY,QAAU,EAAA,QAAA;AAAA,IAAU,WAAW,MAAO,CAAA,UAAA;AAAA,GAAY,CACjG,CAAA,CAAA;AAEJ,EAAA;AAEa,MAAA,SAAA,GAAY,CAAC,KAA0B,MAAA;AAAA,EAClD,OAAS,EAAA,GAAA,CAAA;AAAA;AAAA,EAAA,CAAA;AAAA,EAGT,IAAM,EAAA,GAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAOiB,EAAA,KAAA,CAAM,MAAM,YAAa,CAAA,CAAC,KAAK,KAAM,CAAA,KAAA,CAAM,aAAa,CAAC,CAAA,CAAA;AAAA;AAAA;AAAA,2BAGrD,EAAA,KAAA,CAAM,MAAM,YAAa,CAAA,CAAC,KAAK,KAAM,CAAA,KAAA,CAAM,aAAa,CAAC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA,gBAIpE,EAAA,KAAA,CAAM,QAAQ,CAAC,CAAA,CAAA;AAAA;AAAA;AAAA;AAAA,gBAIf,EAAA,KAAA,CAAM,QAAQ,CAAC,CAAA,CAAA;AAAA,eAChB,EAAA,KAAA,CAAM,QAAQ,CAAC,CAAA,CAAA;AAAA;AAAA;AAAA,EAAA,CAAA;AAAA,EAI9B,UAAY,EAAA,GAAA,CAAA;AAAA,gBACI,EAAA,KAAA,CAAM,QAAQ,CAAC,CAAA,CAAA;AAAA,EAAA,CAAA;AAEjC,CAAA;;;;"}