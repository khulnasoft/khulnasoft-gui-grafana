{"version":3,"file":"DataLinksContextMenu.js","sources":["../../../../src/components/DataLinks/DataLinksContextMenu.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { CSSProperties } from 'react';\n\nimport { LinkModel } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { linkModelToContextMenuItems } from '../../utils/dataLinks';\nimport { WithContextMenu } from '../ContextMenu/WithContextMenu';\nimport { MenuGroup, MenuItemsGroup } from '../Menu/MenuGroup';\nimport { MenuItem } from '../Menu/MenuItem';\n\nexport interface DataLinksContextMenuProps {\n  children: (props: DataLinksContextMenuApi) => JSX.Element;\n  links: () => LinkModel[];\n  style?: CSSProperties;\n}\n\nexport interface DataLinksContextMenuApi {\n  openMenu?: React.MouseEventHandler<HTMLOrSVGElement>;\n  targetClassName?: string;\n}\n\nexport const DataLinksContextMenu = ({ children, links, style }: DataLinksContextMenuProps) => {\n  const itemsGroup: MenuItemsGroup[] = [{ items: linkModelToContextMenuItems(links), label: 'Data links' }];\n  const linksCounter = itemsGroup[0].items.length;\n  const renderMenuGroupItems = () => {\n    return itemsGroup.map((group, index) => (\n      <MenuGroup key={`${group.label}${index}`} label={group.label}>\n        {(group.items || []).map((item) => (\n          <MenuItem\n            key={item.label}\n            url={item.url}\n            label={item.label}\n            target={item.target}\n            icon={item.icon}\n            active={item.active}\n            onClick={item.onClick}\n          />\n        ))}\n      </MenuGroup>\n    ));\n  };\n\n  // Use this class name (exposed via render prop) to add context menu indicator to the click target of the visualization\n  const targetClassName = css`\n    cursor: context-menu;\n  `;\n\n  if (linksCounter > 1) {\n    return (\n      <WithContextMenu renderMenuItems={renderMenuGroupItems}>\n        {({ openMenu }) => {\n          return children({ openMenu, targetClassName });\n        }}\n      </WithContextMenu>\n    );\n  } else {\n    const linkModel = links()[0];\n    return (\n      <a\n        href={linkModel.href}\n        onClick={linkModel.onClick}\n        target={linkModel.target}\n        title={linkModel.title}\n        style={{ ...style, overflow: 'hidden', display: 'flex', flexGrow: 1 }}\n        aria-label={selectors.components.DataLinksContextMenu.singleLink}\n      >\n        {children({})}\n      </a>\n    );\n  }\n};\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBO,MAAM,uBAAuB,CAAC,EAAE,QAAU,EAAA,KAAA,EAAO,OAAuC,KAAA;AAC7F,EAAM,MAAA,UAAA,GAA+B,CAAC,EAAE,KAAA,EAAO,4BAA4B,KAAK,CAAA,EAAG,KAAO,EAAA,YAAA,EAAc,CAAA,CAAA;AACxG,EAAM,MAAA,YAAA,GAAe,UAAW,CAAA,CAAA,CAAA,CAAG,KAAM,CAAA,MAAA,CAAA;AACzC,EAAA,MAAM,uBAAuB,MAAM;AACjC,IAAA,OAAO,UAAW,CAAA,GAAA,CAAI,CAAC,KAAA,EAAO,0BAC3BA,cAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAA,MAAU,GAAA,EAAK,CAAG,EAAA,KAAA,CAAM,KAAQ,CAAA,EAAA,KAAA,CAAA,CAAA;AAAA,MAAS,OAAO,KAAM,CAAA,KAAA;AAAA,KAAA,EAAA,CACnD,MAAM,KAAS,IAAA,IAAI,GAAI,CAAA,CAAC,yBACvBA,cAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AAAA,MACC,KAAK,IAAK,CAAA,KAAA;AAAA,MACV,KAAK,IAAK,CAAA,GAAA;AAAA,MACV,OAAO,IAAK,CAAA,KAAA;AAAA,MACZ,QAAQ,IAAK,CAAA,MAAA;AAAA,MACb,MAAM,IAAK,CAAA,IAAA;AAAA,MACX,QAAQ,IAAK,CAAA,MAAA;AAAA,MACb,SAAS,IAAK,CAAA,OAAA;AAAA,KAChB,CACD,CACH,CACD,CAAA,CAAA;AAAA,GACH,CAAA;AAGA,EAAA,MAAM,eAAkB,GAAA,GAAA,CAAA;AAAA;AAAA,EAAA,CAAA,CAAA;AAIxB,EAAA,IAAI,eAAe,CAAG,EAAA;AACpB,IAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,eAAA,EAAA;AAAA,MAAgB,eAAiB,EAAA,oBAAA;AAAA,KAC/B,EAAA,CAAC,EAAE,QAAA,EAAe,KAAA;AACjB,MAAA,OAAO,QAAS,CAAA,EAAE,QAAU,EAAA,eAAA,EAAiB,CAAA,CAAA;AAAA,KAEjD,CAAA,CAAA;AAAA,GAEG,MAAA;AACL,IAAM,MAAA,SAAA,GAAY,OAAQ,CAAA,CAAA,CAAA,CAAA;AAC1B,IAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,GAAA,EAAA;AAAA,MACC,MAAM,SAAU,CAAA,IAAA;AAAA,MAChB,SAAS,SAAU,CAAA,OAAA;AAAA,MACnB,QAAQ,SAAU,CAAA,MAAA;AAAA,MAClB,OAAO,SAAU,CAAA,KAAA;AAAA,MACjB,KAAA,EAAO,iCAAK,KAAL,CAAA,EAAA,EAAY,UAAU,QAAU,EAAA,OAAA,EAAS,MAAQ,EAAA,QAAA,EAAU,CAAE,EAAA,CAAA;AAAA,MACpE,YAAA,EAAY,SAAU,CAAA,UAAA,CAAW,oBAAqB,CAAA,UAAA;AAAA,KAErD,EAAA,QAAA,CAAS,EAAE,CACd,CAAA,CAAA;AAAA,GAEJ;AACF;;;;"}