{"version":3,"file":"Drawer.js","sources":["../../../../src/components/Drawer/Drawer.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { useOverlay } from '@react-aria/overlays';\nimport RcDrawer from 'rc-drawer';\nimport React, { CSSProperties, ReactNode, useState, useEffect } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { CustomScrollbar } from '../CustomScrollbar/CustomScrollbar';\nimport { IconButton } from '../IconButton/IconButton';\n\nexport interface Props {\n  children: ReactNode;\n  /** Title shown at the top of the drawer */\n  title?: ReactNode;\n  /** Subtitle shown below the title */\n  subtitle?: ReactNode;\n  /** Should the Drawer be closable by clicking on the mask, defaults to true */\n  closeOnMaskClick?: boolean;\n  /** Render the drawer inside a container on the page */\n  inline?: boolean;\n  /** Either a number in px or a string with unit postfix */\n  width?: number | string;\n  /** Should the Drawer be expandable to full width */\n  expandable?: boolean;\n  /** Tabs */\n  tabs?: React.ReactNode;\n  /** Set to true if the component rendered within in drawer content has its own scroll */\n  scrollableContent?: boolean;\n  /** Callback for closing the drawer */\n  onClose: () => void;\n}\n\nexport function Drawer({\n  children,\n  inline = false,\n  onClose,\n  closeOnMaskClick = true,\n  scrollableContent = false,\n  title,\n  subtitle,\n  width = '40%',\n  expandable = false,\n  tabs,\n}: Props) {\n  const drawerStyles = useStyles2(getStyles);\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const currentWidth = isExpanded ? '100%' : width;\n  const overlayRef = React.useRef(null);\n  const { dialogProps, titleProps } = useDialog({}, overlayRef);\n  const { overlayProps } = useOverlay(\n    {\n      isDismissable: false,\n      isOpen,\n      onClose,\n    },\n    overlayRef\n  );\n\n  // RcDrawer v4.x needs to be mounted in advance for animations to play.\n  useEffect(() => {\n    setIsOpen(true);\n  }, []);\n\n  const content = <div className={drawerStyles.content}>{children}</div>;\n  const style: CSSProperties = {};\n  if (inline) {\n    style.position = 'absolute';\n  }\n\n  return (\n    <RcDrawer\n      level={null}\n      handler={false}\n      open={isOpen}\n      onClose={onClose}\n      maskClosable={closeOnMaskClick}\n      placement=\"right\"\n      width={currentWidth}\n      getContainer={inline ? undefined : 'body'}\n      style={style}\n      className={drawerStyles.drawer}\n      aria-label={\n        typeof title === 'string'\n          ? selectors.components.Drawer.General.title(title)\n          : selectors.components.Drawer.General.title('no title')\n      }\n    >\n      <FocusScope restoreFocus contain autoFocus>\n        <div className={drawerStyles.container} {...overlayProps} {...dialogProps} ref={overlayRef}>\n          {typeof title === 'string' && (\n            <div className={drawerStyles.header}>\n              <div className={drawerStyles.actions}>\n                {expandable && !isExpanded && (\n                  <IconButton\n                    name=\"angle-left\"\n                    size=\"xl\"\n                    onClick={() => setIsExpanded(true)}\n                    aria-label={selectors.components.Drawer.General.expand}\n                  />\n                )}\n                {expandable && isExpanded && (\n                  <IconButton\n                    name=\"angle-right\"\n                    size=\"xl\"\n                    onClick={() => setIsExpanded(false)}\n                    aria-label={selectors.components.Drawer.General.contract}\n                  />\n                )}\n                <IconButton\n                  name=\"times\"\n                  size=\"xl\"\n                  onClick={onClose}\n                  aria-label={selectors.components.Drawer.General.close}\n                />\n              </div>\n              <div className={drawerStyles.titleWrapper}>\n                <h3 {...titleProps}>{title}</h3>\n                {typeof subtitle === 'string' && <div className=\"muted\">{subtitle}</div>}\n                {typeof subtitle !== 'string' && subtitle}\n                {tabs && <div className={drawerStyles.tabsWrapper}>{tabs}</div>}\n              </div>\n            </div>\n          )}\n          {typeof title !== 'string' && title}\n          <div className={drawerStyles.contentScroll}>\n            {!scrollableContent ? content : <CustomScrollbar autoHeightMin=\"100%\">{content}</CustomScrollbar>}\n          </div>\n        </div>\n      </FocusScope>\n    </RcDrawer>\n  );\n}\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  return {\n    container: css`\n      display: flex;\n      flex-direction: column;\n      height: 100%;\n      flex: 1 1 0;\n    `,\n    drawer: css`\n      .drawer-content {\n        background-color: ${theme.colors.background.primary};\n        display: flex;\n        flex-direction: column;\n        overflow: hidden;\n      }\n      &.drawer-open .drawer-mask {\n        background-color: ${theme.components.overlay.background};\n        backdrop-filter: blur(1px);\n        opacity: 1;\n      }\n      .drawer-mask {\n        background-color: ${theme.components.overlay.background};\n        backdrop-filter: blur(1px);\n      }\n      .drawer-open .drawer-content-wrapper {\n        box-shadow: ${theme.shadows.z3};\n      }\n\n      z-index: ${theme.zIndex.dropdown};\n\n      ${theme.breakpoints.down('sm')} {\n        .drawer-content-wrapper {\n          width: 100% !important;\n        }\n      }\n    `,\n    header: css`\n      background-color: ${theme.colors.background.canvas};\n      flex-grow: 0;\n      padding-top: ${theme.spacing(0.5)};\n    `,\n    actions: css`\n      display: flex;\n      align-items: baseline;\n      justify-content: flex-end;\n    `,\n    titleWrapper: css`\n      margin-bottom: ${theme.spacing(3)};\n      padding: ${theme.spacing(0, 1, 0, 3)};\n      overflow-wrap: break-word;\n    `,\n    content: css({\n      padding: theme.spacing(2),\n      height: '100%',\n      flexGrow: 1,\n    }),\n    contentScroll: css({\n      minHeight: 0,\n      flex: 1,\n    }),\n    tabsWrapper: css({\n      paddingLeft: theme.spacing(2),\n      margin: theme.spacing(3, -1, -3, -3),\n    }),\n  };\n};\n"],"names":["React"],"mappings":"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"}