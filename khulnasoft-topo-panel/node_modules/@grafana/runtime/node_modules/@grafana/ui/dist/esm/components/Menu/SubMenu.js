import { css } from '@emotion/css';
import React__default, { useRef } from 'react';
import { selectors } from '@grafana/e2e-selectors';
import { useStyles2 } from '../../themes/ThemeContext.js';
import '@grafana/data';
import 'memoize-one';
import '@emotion/react';
import 'tinycolor2';
import { Icon } from '../Icon/Icon.js';
import { useMenuFocus } from './hooks.js';
import { getPosition } from './utils.js';

const SubMenu = React__default.memo(
  ({ items, isOpen, openedWithArrow, setOpenedWithArrow, close, customStyle }) => {
    const styles = useStyles2(getStyles);
    const localRef = useRef(null);
    const [handleKeys] = useMenuFocus({
      localRef,
      isMenuOpen: isOpen,
      openedWithArrow,
      setOpenedWithArrow,
      close
    });
    return /* @__PURE__ */ React__default.createElement(React__default.Fragment, null, /* @__PURE__ */ React__default.createElement("div", {
      className: styles.iconWrapper,
      "aria-label": selectors.components.Menu.SubMenu.icon
    }, /* @__PURE__ */ React__default.createElement(Icon, {
      name: "angle-right",
      className: styles.icon,
      "aria-hidden": true
    })), isOpen && /* @__PURE__ */ React__default.createElement("div", {
      ref: localRef,
      className: styles.subMenu(localRef.current),
      "aria-label": selectors.components.Menu.SubMenu.container,
      style: customStyle
    }, /* @__PURE__ */ React__default.createElement("div", {
      tabIndex: -1,
      className: styles.itemsWrapper,
      role: "menu",
      onKeyDown: handleKeys
    }, items)));
  }
);
SubMenu.displayName = "SubMenu";
const getStyles = (theme) => {
  return {
    iconWrapper: css`
      display: flex;
      flex: 1;
      justify-content: end;
    `,
    icon: css`
      opacity: 0.7;
      margin-left: ${theme.spacing(2)};
      color: ${theme.colors.text.secondary};
    `,
    itemsWrapper: css`
      background: ${theme.colors.background.primary};
      box-shadow: ${theme.shadows.z3};
      display: inline-block;
      border-radius: ${theme.shape.borderRadius()};
    `,
    subMenu: (element) => css`
      position: absolute;
      top: 0;
      z-index: ${theme.zIndex.dropdown};
      ${getPosition(element)}: 100%;
    `
  };
};

export { SubMenu };
//# sourceMappingURL=SubMenu.js.map
