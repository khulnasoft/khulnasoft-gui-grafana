{"version":3,"file":"Modal.js","sources":["../../../../src/components/Modal/Modal.tsx"],"sourcesContent":["import { cx } from '@emotion/css';\nimport { useDialog } from '@react-aria/dialog';\nimport { FocusScope } from '@react-aria/focus';\nimport { OverlayContainer, useOverlay } from '@react-aria/overlays';\nimport React, { PropsWithChildren, useRef } from 'react';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { IconButton } from '../IconButton/IconButton';\nimport { HorizontalGroup } from '../Layout/Layout';\n\nimport { ModalHeader } from './ModalHeader';\nimport { getModalStyles } from './getModalStyles';\n\nexport interface Props {\n  /** @deprecated no longer used */\n  icon?: IconName;\n  /** @deprecated no longer used */\n  iconTooltip?: string;\n  /** Title for the modal or custom header element */\n  title: string | JSX.Element;\n  className?: string;\n  contentClassName?: string;\n  closeOnEscape?: boolean;\n  closeOnBackdropClick?: boolean;\n  trapFocus?: boolean;\n\n  isOpen?: boolean;\n  onDismiss?: () => void;\n\n  /** If not set will call onDismiss if that is set. */\n  onClickBackdrop?: () => void;\n}\n\nexport function Modal(props: PropsWithChildren<Props>) {\n  const {\n    title,\n    children,\n    isOpen = false,\n    closeOnEscape = true,\n    closeOnBackdropClick = true,\n    className,\n    contentClassName,\n    onDismiss,\n    onClickBackdrop,\n    trapFocus = true,\n  } = props;\n  const theme = useTheme2();\n  const styles = getModalStyles(theme);\n\n  const ref = useRef<HTMLDivElement>(null);\n\n  // Handle interacting outside the dialog and pressing\n  // the Escape key to close the modal.\n  const { overlayProps, underlayProps } = useOverlay(\n    { isKeyboardDismissDisabled: !closeOnEscape, isOpen, onClose: onDismiss },\n    ref\n  );\n\n  // Get props for the dialog and its title\n  const { dialogProps, titleProps } = useDialog({}, ref);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const headerClass = cx(styles.modalHeader, typeof title !== 'string' && styles.modalHeaderWithTabs);\n\n  return (\n    <OverlayContainer>\n      <div\n        className={styles.modalBackdrop}\n        onClick={onClickBackdrop || (closeOnBackdropClick ? onDismiss : undefined)}\n        {...underlayProps}\n      />\n      <FocusScope contain={trapFocus} autoFocus restoreFocus>\n        <div className={cx(styles.modal, className)} ref={ref} {...overlayProps} {...dialogProps}>\n          <div className={headerClass}>\n            {typeof title === 'string' && <DefaultModalHeader {...props} title={title} id={titleProps.id} />}\n            {\n              // FIXME: custom title components won't get an accessible title.\n              // Do we really want to support them or shall we just limit this ModalTabsHeader?\n              typeof title !== 'string' && title\n            }\n            <div className={styles.modalHeaderClose}>\n              <IconButton aria-label=\"Close dialogue\" name=\"times\" size=\"xl\" onClick={onDismiss} />\n            </div>\n          </div>\n          <div className={cx(styles.modalContent, contentClassName)}>{children}</div>\n        </div>\n      </FocusScope>\n    </OverlayContainer>\n  );\n}\n\nfunction ModalButtonRow({ leftItems, children }: { leftItems?: React.ReactNode; children: React.ReactNode }) {\n  const theme = useTheme2();\n  const styles = getModalStyles(theme);\n\n  if (leftItems) {\n    return (\n      <div className={styles.modalButtonRow}>\n        <HorizontalGroup justify=\"space-between\">\n          <HorizontalGroup justify=\"flex-start\" spacing=\"md\">\n            {leftItems}\n          </HorizontalGroup>\n          <HorizontalGroup justify=\"flex-end\" spacing=\"md\">\n            {children}\n          </HorizontalGroup>\n        </HorizontalGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.modalButtonRow}>\n      <HorizontalGroup justify=\"flex-end\" spacing=\"md\">\n        {children}\n      </HorizontalGroup>\n    </div>\n  );\n}\n\nModal.ButtonRow = ModalButtonRow;\n\ninterface DefaultModalHeaderProps {\n  id?: string;\n  title: string;\n  icon?: IconName;\n  iconTooltip?: string;\n}\n\nfunction DefaultModalHeader({ icon, iconTooltip, title, id }: DefaultModalHeaderProps): JSX.Element {\n  return <ModalHeader icon={icon} iconTooltip={iconTooltip} title={title} id={id} />;\n}\n"],"names":["React"],"mappings":"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"}