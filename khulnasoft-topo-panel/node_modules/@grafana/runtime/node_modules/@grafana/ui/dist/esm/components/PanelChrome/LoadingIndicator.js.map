{"version":3,"file":"LoadingIndicator.js","sources":["../../../../src/components/PanelChrome/LoadingIndicator.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React from 'react';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Tooltip } from '../Tooltip/Tooltip';\n\n/**\n * @internal\n */\nexport type LoadingIndicatorProps = {\n  loading: boolean;\n  onCancel: () => void;\n};\n\n/**\n * @internal\n */\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({ onCancel, loading }) => {\n  const styles = useStyles2(getStyles);\n\n  if (!loading) {\n    return null;\n  }\n\n  return (\n    <Tooltip content=\"Cancel query\">\n      <Icon\n        className={cx('spin-clockwise', { [styles.clickable]: !!onCancel })}\n        name=\"sync\"\n        size=\"sm\"\n        onClick={onCancel}\n        aria-label={selectors.components.LoadingIndicator.icon}\n      />\n    </Tooltip>\n  );\n};\n\nconst getStyles = () => {\n  return {\n    clickable: css`\n      cursor: pointer;\n    `,\n  };\n};\n"],"names":["React"],"mappings":";;;;;;;;;;;AAoBO,MAAM,gBAAoD,GAAA,CAAC,EAAE,QAAA,EAAU,SAAc,KAAA;AAC1F,EAAM,MAAA,MAAA,GAAS,WAAW,SAAS,CAAA,CAAA;AAEnC,EAAA,IAAI,CAAC,OAAS,EAAA;AACZ,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAA,uBACGA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAA,IAAQ,OAAQ,EAAA,cAAA;AAAA,GAAA,kBACdA,cAAA,CAAA,aAAA,CAAA,IAAA,EAAA;AAAA,IACC,SAAA,EAAW,EAAG,CAAA,gBAAA,EAAkB,EAAE,CAAC,OAAO,SAAY,GAAA,CAAC,CAAC,QAAA,EAAU,CAAA;AAAA,IAClE,IAAK,EAAA,MAAA;AAAA,IACL,IAAK,EAAA,IAAA;AAAA,IACL,OAAS,EAAA,QAAA;AAAA,IACT,YAAA,EAAY,SAAU,CAAA,UAAA,CAAW,gBAAiB,CAAA,IAAA;AAAA,GACpD,CACF,CAAA,CAAA;AAEJ,EAAA;AAEA,MAAM,YAAY,MAAM;AACtB,EAAO,OAAA;AAAA,IACL,SAAW,EAAA,GAAA,CAAA;AAAA;AAAA,IAAA,CAAA;AAAA,GAGb,CAAA;AACF,CAAA;;;;"}