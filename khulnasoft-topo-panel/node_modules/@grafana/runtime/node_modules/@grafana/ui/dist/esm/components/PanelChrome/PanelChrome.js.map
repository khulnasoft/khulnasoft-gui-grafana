{"version":3,"file":"PanelChrome.js","sources":["../../../../src/components/PanelChrome/PanelChrome.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { CSSProperties, ReactNode } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2, useTheme2 } from '../../themes';\n\n/**\n * @internal\n */\nexport interface PanelChromeProps {\n  width: number;\n  height: number;\n  title?: string;\n  padding?: PanelPadding;\n  leftItems?: React.ReactNode[]; // rightItems will be added later (actions links etc.)\n  children: (innerWidth: number, innerHeight: number) => React.ReactNode;\n}\n\n/**\n * @internal\n */\nexport type PanelPadding = 'none' | 'md';\n\n/**\n * @internal\n */\nexport const PanelChrome: React.FC<PanelChromeProps> = ({\n  title = '',\n  children,\n  width,\n  height,\n  padding = 'md',\n  leftItems = [],\n}) => {\n  const theme = useTheme2();\n  const styles = useStyles2(getStyles);\n\n  const headerHeight = getHeaderHeight(theme, title, leftItems);\n  const { contentStyle, innerWidth, innerHeight } = getContentStyle(padding, theme, width, headerHeight, height);\n\n  const headerStyles: CSSProperties = {\n    height: headerHeight,\n  };\n\n  const containerStyles: CSSProperties = { width, height };\n\n  return (\n    <div className={styles.container} style={containerStyles}>\n      <div className={styles.header} style={headerStyles}>\n        <div className={styles.headerTitle}>{title}</div>\n        {itemsRenderer(leftItems, (items) => {\n          return <div className={styles.leftItems}>{items}</div>;\n        })}\n      </div>\n      <div className={styles.content} style={contentStyle}>\n        {children(innerWidth, innerHeight)}\n      </div>\n    </div>\n  );\n};\n\nconst itemsRenderer = (items: ReactNode[], renderer: (items: ReactNode[]) => ReactNode): ReactNode => {\n  const toRender = React.Children.toArray(items).filter(Boolean);\n  return toRender.length > 0 ? renderer(toRender) : null;\n};\n\nconst getHeaderHeight = (theme: GrafanaTheme2, title: string, items: ReactNode[]) => {\n  if (title.length > 0 || items.length > 0) {\n    return theme.spacing.gridSize * theme.components.panel.headerHeight;\n  }\n  return 0;\n};\n\nconst getContentStyle = (\n  padding: string,\n  theme: GrafanaTheme2,\n  width: number,\n  headerHeight: number,\n  height: number\n) => {\n  const chromePadding = (padding === 'md' ? theme.components.panel.padding : 0) * theme.spacing.gridSize;\n  const panelBorder = 1 * 2;\n  const innerWidth = width - chromePadding * 2 - panelBorder;\n  const innerHeight = height - headerHeight - chromePadding * 2 - panelBorder;\n\n  const contentStyle: CSSProperties = {\n    padding: chromePadding,\n  };\n\n  return { contentStyle, innerWidth, innerHeight };\n};\n\nconst getStyles = (theme: GrafanaTheme2) => {\n  const { padding, background, borderColor } = theme.components.panel;\n\n  return {\n    container: css`\n      label: panel-container;\n      background-color: ${background};\n      border: 1px solid ${borderColor};\n      position: relative;\n      border-radius: 3px;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      flex: 0 0 0;\n    `,\n    content: css`\n      label: panel-content;\n      width: 100%;\n      flex-grow: 1;\n    `,\n    header: css`\n      label: panel-header;\n      display: flex;\n      align-items: center;\n    `,\n    headerTitle: css`\n      label: panel-header;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      white-space: nowrap;\n      padding-left: ${theme.spacing(padding)};\n      flex-grow: 1;\n      font-weight: ${theme.typography.fontWeightMedium};\n    `,\n    leftItems: css`\n      display: flex;\n      padding-right: ${theme.spacing(padding)};\n    `,\n  };\n};\n"],"names":["React"],"mappings":"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"}