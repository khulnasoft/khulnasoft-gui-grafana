{"version":3,"file":"SelectBase.js","sources":["../../../../src/components/Select/SelectBase.tsx"],"sourcesContent":["import React, { ComponentProps, useCallback, useEffect, useRef, useState } from 'react';\nimport { default as ReactSelect } from 'react-select';\nimport { default as ReactAsyncSelect } from 'react-select/async';\nimport { default as AsyncCreatable } from 'react-select/async-creatable';\nimport Creatable from 'react-select/creatable';\n\nimport { SelectableValue } from '@grafana/data';\n\nimport { useTheme2 } from '../../themes';\nimport { Icon } from '../Icon/Icon';\nimport { Spinner } from '../Spinner/Spinner';\n\nimport { DropdownIndicator } from './DropdownIndicator';\nimport { IndicatorsContainer } from './IndicatorsContainer';\nimport { InputControl } from './InputControl';\nimport { MultiValueContainer, MultiValueRemove } from './MultiValue';\nimport { SelectContainer } from './SelectContainer';\nimport { SelectMenu, SelectMenuOptions, VirtualizedSelectMenu } from './SelectMenu';\nimport { SelectOptionGroup } from './SelectOptionGroup';\nimport { SingleValue } from './SingleValue';\nimport { ValueContainer } from './ValueContainer';\nimport { getSelectStyles } from './getSelectStyles';\nimport { useCustomSelectStyles } from './resetSelectStyles';\nimport { ActionMeta, SelectBaseProps } from './types';\nimport { cleanValue, findSelectedValue, omitDescriptions } from './utils';\n\ninterface ExtraValuesIndicatorProps {\n  maxVisibleValues?: number | undefined;\n  selectedValuesCount: number;\n  menuIsOpen: boolean;\n  showAllSelectedWhenOpen: boolean;\n}\n\nconst renderExtraValuesIndicator = (props: ExtraValuesIndicatorProps) => {\n  const { maxVisibleValues, selectedValuesCount, menuIsOpen, showAllSelectedWhenOpen } = props;\n\n  if (\n    maxVisibleValues !== undefined &&\n    selectedValuesCount > maxVisibleValues &&\n    !(showAllSelectedWhenOpen && menuIsOpen)\n  ) {\n    return (\n      <span key=\"excess-values\" id=\"excess-values\">\n        (+{selectedValuesCount - maxVisibleValues})\n      </span>\n    );\n  }\n\n  return null;\n};\n\nconst CustomControl = (props: any) => {\n  const {\n    children,\n    innerProps,\n    selectProps: { menuIsOpen, onMenuClose, onMenuOpen },\n    isFocused,\n    isMulti,\n    getValue,\n    innerRef,\n  } = props;\n  const selectProps = props.selectProps as SelectBaseProps<any>;\n\n  if (selectProps.renderControl) {\n    return React.createElement(selectProps.renderControl, {\n      isOpen: menuIsOpen,\n      value: isMulti ? getValue() : getValue()[0],\n      ref: innerRef,\n      onClick: menuIsOpen ? onMenuClose : onMenuOpen,\n      onBlur: onMenuClose,\n      disabled: !!selectProps.disabled,\n      invalid: !!selectProps.invalid,\n    });\n  }\n\n  return (\n    <InputControl\n      ref={innerRef}\n      innerProps={innerProps}\n      prefix={selectProps.prefix}\n      focused={isFocused}\n      invalid={!!selectProps.invalid}\n      disabled={!!selectProps.disabled}\n    >\n      {children}\n    </InputControl>\n  );\n};\n\nexport function SelectBase<T>({\n  allowCustomValue = false,\n  allowCreateWhileLoading = false,\n  'aria-label': ariaLabel,\n  autoFocus = false,\n  backspaceRemovesValue = true,\n  cacheOptions,\n  className,\n  closeMenuOnSelect = true,\n  components,\n  defaultOptions,\n  defaultValue,\n  disabled = false,\n  filterOption,\n  formatCreateLabel,\n  getOptionLabel,\n  getOptionValue,\n  inputValue,\n  invalid,\n  isClearable = false,\n  id,\n  isLoading = false,\n  isMulti = false,\n  inputId,\n  isOpen,\n  isOptionDisabled,\n  isSearchable = true,\n  loadOptions,\n  loadingMessage = 'Loading options...',\n  maxMenuHeight = 300,\n  minMenuHeight,\n  maxVisibleValues,\n  menuPlacement = 'auto',\n  menuPosition,\n  menuShouldPortal = true,\n  noOptionsMessage = 'No options found',\n  onBlur,\n  onChange,\n  onCloseMenu,\n  onCreateOption,\n  onInputChange,\n  onKeyDown,\n  onOpenMenu,\n  onFocus,\n  openMenuOnFocus = false,\n  options = [],\n  placeholder = 'Choose',\n  prefix,\n  renderControl,\n  showAllSelectedWhenOpen = true,\n  tabSelectsValue = true,\n  value,\n  virtualized = false,\n  width,\n  isValidNewOption,\n  formatOptionLabel,\n}: SelectBaseProps<T>) {\n  const theme = useTheme2();\n  const styles = getSelectStyles(theme);\n\n  const reactSelectRef = useRef<{ controlRef: HTMLElement }>(null);\n  const [closeToBottom, setCloseToBottom] = useState<boolean>(false);\n  const selectStyles = useCustomSelectStyles(theme, width);\n\n  // Infer the menu position for asynchronously loaded options. menuPlacement=\"auto\" doesn't work when the menu is\n  // automatically opened when the component is created (it happens in SegmentSelect by setting menuIsOpen={true}).\n  // We can remove this workaround when the bug in react-select is fixed: https://github.com/JedWatson/react-select/issues/4936\n  // Note: we use useEffect instead of hooking into onMenuOpen due to another bug: https://github.com/JedWatson/react-select/issues/3375\n  useEffect(() => {\n    if (\n      loadOptions &&\n      isOpen &&\n      reactSelectRef.current &&\n      reactSelectRef.current.controlRef &&\n      menuPlacement === 'auto'\n    ) {\n      const distance = window.innerHeight - reactSelectRef.current.controlRef.getBoundingClientRect().bottom;\n      setCloseToBottom(distance < maxMenuHeight);\n    }\n  }, [maxMenuHeight, menuPlacement, loadOptions, isOpen]);\n\n  const onChangeWithEmpty = useCallback(\n    (value: SelectableValue<T>, action: ActionMeta) => {\n      if (isMulti && (value === undefined || value === null)) {\n        return onChange([], action);\n      }\n      onChange(value, action);\n    },\n    [isMulti, onChange]\n  );\n\n  let ReactSelectComponent = ReactSelect;\n\n  const creatableProps: ComponentProps<typeof Creatable> = {};\n  let asyncSelectProps: any = {};\n  let selectedValue;\n  if (isMulti && loadOptions) {\n    selectedValue = value as any;\n  } else {\n    // If option is passed as a plain value (value property from SelectableValue property)\n    // we are selecting the corresponding value from the options\n    if (isMulti && value && Array.isArray(value) && !loadOptions) {\n      // @ts-ignore\n      selectedValue = value.map((v) => findSelectedValue(v.value ?? v, options));\n    } else if (loadOptions) {\n      const hasValue = defaultValue || value;\n      selectedValue = hasValue ? [hasValue] : [];\n    } else {\n      selectedValue = cleanValue(value, options);\n    }\n  }\n\n  const commonSelectProps = {\n    'aria-label': ariaLabel,\n    autoFocus,\n    backspaceRemovesValue,\n    captureMenuScroll: false,\n    closeMenuOnSelect,\n    // We don't want to close if we're actually scrolling the menu\n    // So only close if none of the parents are the select menu itself\n    defaultValue,\n    // Also passing disabled, as this is the new Select API, and I want to use this prop instead of react-select's one\n    disabled,\n    filterOption,\n    getOptionLabel,\n    getOptionValue,\n    inputValue,\n    invalid,\n    isClearable,\n    id,\n    // Passing isDisabled as react-select accepts this prop\n    isDisabled: disabled,\n    isLoading,\n    isMulti,\n    inputId,\n    isOptionDisabled,\n    isSearchable,\n    maxMenuHeight,\n    minMenuHeight,\n    maxVisibleValues,\n    menuIsOpen: isOpen,\n    menuPlacement: menuPlacement === 'auto' && closeToBottom ? 'top' : menuPlacement,\n    menuPosition,\n    menuShouldBlockScroll: true,\n    menuPortalTarget: menuShouldPortal && typeof document !== 'undefined' ? document.body : undefined,\n    menuShouldScrollIntoView: false,\n    onBlur,\n    onChange: onChangeWithEmpty,\n    onInputChange,\n    onKeyDown,\n    onMenuClose: onCloseMenu,\n    onMenuOpen: onOpenMenu,\n    onFocus,\n    formatOptionLabel,\n    openMenuOnFocus,\n    options: virtualized ? omitDescriptions(options) : options,\n    placeholder,\n    prefix,\n    renderControl,\n    showAllSelectedWhenOpen,\n    tabSelectsValue,\n    value: isMulti ? selectedValue : selectedValue?.[0],\n  };\n\n  if (allowCustomValue) {\n    ReactSelectComponent = Creatable as any;\n    creatableProps.allowCreateWhileLoading = allowCreateWhileLoading;\n    creatableProps.formatCreateLabel = formatCreateLabel ?? defaultFormatCreateLabel;\n    creatableProps.onCreateOption = onCreateOption;\n    creatableProps.isValidNewOption = isValidNewOption;\n  }\n\n  // Instead of having AsyncSelect, as a separate component we render ReactAsyncSelect\n  if (loadOptions) {\n    ReactSelectComponent = (allowCustomValue ? AsyncCreatable : ReactAsyncSelect) as any;\n    asyncSelectProps = {\n      loadOptions,\n      cacheOptions,\n      defaultOptions,\n    };\n  }\n\n  const SelectMenuComponent = virtualized ? VirtualizedSelectMenu : SelectMenu;\n\n  return (\n    <>\n      <ReactSelectComponent\n        ref={reactSelectRef}\n        components={{\n          MenuList: SelectMenuComponent,\n          Group: SelectOptionGroup,\n          ValueContainer,\n          IndicatorsContainer(props: any) {\n            const { selectProps } = props;\n            const { value, showAllSelectedWhenOpen, maxVisibleValues, menuIsOpen } = selectProps;\n\n            if (maxVisibleValues !== undefined) {\n              const selectedValuesCount = value.length;\n              const indicatorChildren = [...props.children];\n              indicatorChildren.splice(\n                -1,\n                0,\n                renderExtraValuesIndicator({\n                  maxVisibleValues,\n                  selectedValuesCount,\n                  showAllSelectedWhenOpen,\n                  menuIsOpen,\n                })\n              );\n              return <IndicatorsContainer {...props}>{indicatorChildren}</IndicatorsContainer>;\n            }\n\n            return <IndicatorsContainer {...props} />;\n          },\n          IndicatorSeparator() {\n            return <></>;\n          },\n          Control: CustomControl,\n          Option: SelectMenuOptions,\n          ClearIndicator(props: any) {\n            const { clearValue } = props;\n            return (\n              <Icon\n                name=\"times\"\n                role=\"button\"\n                aria-label=\"select-clear-value\"\n                className={styles.singleValueRemove}\n                onMouseDown={(e) => {\n                  e.preventDefault();\n                  e.stopPropagation();\n                  clearValue();\n                }}\n              />\n            );\n          },\n          LoadingIndicator() {\n            return <Spinner inline />;\n          },\n          LoadingMessage() {\n            return <div className={styles.loadingMessage}>{loadingMessage}</div>;\n          },\n          NoOptionsMessage() {\n            return (\n              <div className={styles.loadingMessage} aria-label=\"No options provided\">\n                {noOptionsMessage}\n              </div>\n            );\n          },\n          DropdownIndicator(props) {\n            return <DropdownIndicator isOpen={props.selectProps.menuIsOpen} />;\n          },\n          SingleValue(props: any) {\n            return <SingleValue {...props} disabled={disabled} />;\n          },\n          SelectContainer,\n          MultiValueContainer: MultiValueContainer,\n          MultiValueRemove: MultiValueRemove,\n          ...components,\n        }}\n        styles={selectStyles}\n        className={className}\n        {...commonSelectProps}\n        {...creatableProps}\n        {...asyncSelectProps}\n      />\n    </>\n  );\n}\n\nfunction defaultFormatCreateLabel(input: string) {\n  return (\n    <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n      <div>{input}</div>\n      <div style={{ flexGrow: 1 }} />\n      <div className=\"muted small\" style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>\n        Hit enter to add\n      </div>\n    </div>\n  );\n}\n"],"names":["React","value","showAllSelectedWhenOpen","maxVisibleValues"],"mappings":"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"}