{"version":3,"file":"HeaderRow.js","sources":["../../../../src/components/Table/HeaderRow.tsx"],"sourcesContent":["import React from 'react';\nimport { HeaderGroup, Column } from 'react-table';\n\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useStyles2 } from '../../themes';\nimport { getFieldTypeIcon } from '../../types';\nimport { Icon } from '../Icon/Icon';\n\nimport { Filter } from './Filter';\nimport { getTableStyles, TableStyles } from './styles';\n\nexport interface HeaderRowProps {\n  headerGroups: HeaderGroup[];\n  showTypeIcons?: boolean;\n}\n\nexport const HeaderRow = (props: HeaderRowProps) => {\n  const { headerGroups, showTypeIcons } = props;\n  const e2eSelectorsTable = selectors.components.Panels.Visualization.Table;\n  const tableStyles = useStyles2(getTableStyles);\n\n  return (\n    <div role=\"rowgroup\">\n      {headerGroups.map((headerGroup: HeaderGroup) => {\n        const { key, ...headerGroupProps } = headerGroup.getHeaderGroupProps();\n        return (\n          <div\n            className={tableStyles.thead}\n            {...headerGroupProps}\n            key={key}\n            aria-label={e2eSelectorsTable.header}\n            role=\"row\"\n          >\n            {headerGroup.headers.map((column: Column, index: number) =>\n              renderHeaderCell(column, tableStyles, showTypeIcons)\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nfunction renderHeaderCell(column: any, tableStyles: TableStyles, showTypeIcons?: boolean) {\n  const headerProps = column.getHeaderProps();\n  const field = column.field ?? null;\n\n  if (column.canResize) {\n    headerProps.style.userSelect = column.isResizing ? 'none' : 'auto'; // disables selecting text while resizing\n  }\n\n  headerProps.style.position = 'absolute';\n  headerProps.style.justifyContent = column.justifyContent;\n\n  return (\n    <div className={tableStyles.headerCell} {...headerProps} role=\"columnheader\">\n      {column.canSort && (\n        <>\n          <button {...column.getSortByToggleProps()} className={tableStyles.headerCellLabel}>\n            {showTypeIcons && (\n              <Icon name={getFieldTypeIcon(field)} title={field?.type} size=\"sm\" className={tableStyles.typeIcon} />\n            )}\n            <div>{column.render('Header')}</div>\n            <div>\n              {column.isSorted && (column.isSortedDesc ? <Icon name=\"arrow-down\" /> : <Icon name=\"arrow-up\" />)}\n            </div>\n          </button>\n          {column.canFilter && <Filter column={column} tableStyles={tableStyles} field={field} />}\n        </>\n      )}\n      {!column.canSort && column.render('Header')}\n      {!column.canSort && column.canFilter && <Filter column={column} tableStyles={tableStyles} field={field} />}\n      {column.canResize && <div {...column.getResizerProps()} className={tableStyles.resizeHandle} />}\n    </div>\n  );\n}\n"],"names":["React"],"mappings":"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"}