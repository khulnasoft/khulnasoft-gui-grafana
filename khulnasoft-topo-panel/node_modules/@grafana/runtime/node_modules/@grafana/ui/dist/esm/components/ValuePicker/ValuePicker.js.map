{"version":3,"file":"ValuePicker.js","sources":["../../../../src/components/ValuePicker/ValuePicker.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { SelectableValue } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nimport { useTheme2 } from '../../themes';\nimport { IconName } from '../../types';\nimport { ComponentSize } from '../../types/size';\nimport { Button, ButtonFill, ButtonVariant } from '../Button';\nimport { Select } from '../Select/Select';\n\nexport interface ValuePickerProps<T> {\n  /** Aria label applied to the input field */\n  ['aria-label']?: string;\n  /** Label to display on the picker button */\n  label: string;\n  /** Icon to display on the picker button */\n  icon?: IconName;\n  /** ValuePicker options  */\n  options: Array<SelectableValue<T>>;\n  /** Callback to handle selected option */\n  onChange: (value: SelectableValue<T>) => void;\n  /** Which ButtonVariant to render */\n  variant?: ButtonVariant;\n  /** Size of button  */\n  size?: ComponentSize;\n  /** Min width for select in grid units */\n  minWidth?: number;\n  /** Should the picker cover the full width of its parent */\n  isFullWidth?: boolean;\n  /** Control where the menu is rendered */\n  menuPlacement?: 'auto' | 'bottom' | 'top';\n  /** Which ButtonFill to use */\n  fill?: ButtonFill;\n\n  /** custom css applied to the button */\n  buttonCss?: string;\n}\n\nexport function ValuePicker<T>({\n  'aria-label': ariaLabel,\n  label,\n  icon,\n  options,\n  onChange,\n  variant,\n  minWidth = 16,\n  size = 'sm',\n  isFullWidth = true,\n  menuPlacement,\n  fill,\n  buttonCss,\n}: ValuePickerProps<T>) {\n  const [isPicking, setIsPicking] = useState(false);\n  const theme = useTheme2();\n\n  return (\n    <>\n      {!isPicking && (\n        <Button\n          size={size || 'sm'}\n          className={buttonCss}\n          icon={icon || 'plus'}\n          onClick={() => setIsPicking(true)}\n          variant={variant}\n          fill={fill}\n          fullWidth={isFullWidth}\n          aria-label={selectors.components.ValuePicker.button(ariaLabel ?? label)}\n        >\n          {label}\n        </Button>\n      )}\n\n      {isPicking && (\n        <span style={{ minWidth: theme.spacing(minWidth), flexGrow: isFullWidth ? 1 : undefined }}>\n          <Select\n            placeholder={label}\n            options={options}\n            aria-label={selectors.components.ValuePicker.select(ariaLabel ?? label)}\n            isOpen\n            onCloseMenu={() => setIsPicking(false)}\n            autoFocus={true}\n            onChange={(value) => {\n              setIsPicking(false);\n              onChange(value);\n            }}\n            menuPlacement={menuPlacement}\n          />\n        </span>\n      )}\n    </>\n  );\n}\n"],"names":["React"],"mappings":";;;;;;;;;;;AAuCO,SAAS,WAAe,CAAA;AAAA,EAC7B,YAAc,EAAA,SAAA;AAAA,EACd,KAAA;AAAA,EACA,IAAA;AAAA,EACA,OAAA;AAAA,EACA,QAAA;AAAA,EACA,OAAA;AAAA,EACA,QAAW,GAAA,EAAA;AAAA,EACX,IAAO,GAAA,IAAA;AAAA,EACP,WAAc,GAAA,IAAA;AAAA,EACd,aAAA;AAAA,EACA,IAAA;AAAA,EACA,SAAA;AACF,CAAwB,EAAA;AACtB,EAAA,MAAM,CAAC,SAAA,EAAW,YAAY,CAAA,GAAI,SAAS,KAAK,CAAA,CAAA;AAChD,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AAExB,EACE,uBAAAA,cAAA,CAAA,aAAA,CAAAA,cAAA,CAAA,QAAA,EAAA,IAAA,EACG,CAAC,SAAA,oBACCA,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAA,IACC,MAAM,IAAQ,IAAA,IAAA;AAAA,IACd,SAAW,EAAA,SAAA;AAAA,IACX,MAAM,IAAQ,IAAA,MAAA;AAAA,IACd,OAAA,EAAS,MAAM,YAAA,CAAa,IAAI,CAAA;AAAA,IAChC,OAAA;AAAA,IACA,IAAA;AAAA,IACA,SAAW,EAAA,WAAA;AAAA,IACX,cAAY,SAAU,CAAA,UAAA,CAAW,WAAY,CAAA,MAAA,CAAO,gCAAa,KAAK,CAAA;AAAA,GAErE,EAAA,KACH,CAGD,EAAA,SAAA,oBACEA,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAA,IAAK,KAAA,EAAO,EAAE,QAAA,EAAU,KAAM,CAAA,OAAA,CAAQ,QAAQ,CAAG,EAAA,QAAA,EAAU,WAAc,GAAA,CAAA,GAAI,KAAU,CAAA,EAAA;AAAA,GAAA,kBACrFA,cAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAA,IACC,WAAa,EAAA,KAAA;AAAA,IACb,OAAA;AAAA,IACA,cAAY,SAAU,CAAA,UAAA,CAAW,WAAY,CAAA,MAAA,CAAO,gCAAa,KAAK,CAAA;AAAA,IACtE,MAAM,EAAA,IAAA;AAAA,IACN,WAAA,EAAa,MAAM,YAAA,CAAa,KAAK,CAAA;AAAA,IACrC,SAAW,EAAA,IAAA;AAAA,IACX,QAAA,EAAU,CAAC,KAAU,KAAA;AACnB,MAAA,YAAA,CAAa,KAAK,CAAA,CAAA;AAClB,MAAA,QAAA,CAAS,KAAK,CAAA,CAAA;AAAA,KAChB;AAAA,IACA,aAAA;AAAA,GACF,CACF,CAEJ,CAAA,CAAA;AAEJ;;;;"}