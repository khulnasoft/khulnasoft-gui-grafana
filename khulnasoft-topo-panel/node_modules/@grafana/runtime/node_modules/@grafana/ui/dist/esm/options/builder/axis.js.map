{"version":3,"file":"axis.js","sources":["../../../../src/options/builder/axis.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  FieldConfigEditorBuilder,\n  FieldType,\n  identityOverrideProcessor,\n  SelectableValue,\n  StandardEditorProps,\n} from '@grafana/data';\nimport { AxisColorMode, AxisConfig, AxisPlacement, ScaleDistribution, ScaleDistributionConfig } from '@grafana/schema';\n\nimport { graphFieldOptions, Select, RadioButtonGroup, Input, Field } from '../../index';\n\n/**\n * @alpha\n */\nexport function addAxisConfig(\n  builder: FieldConfigEditorBuilder<AxisConfig>,\n  defaultConfig: AxisConfig,\n  hideScale?: boolean\n) {\n  const category = ['Axis'];\n\n  // options for axis appearance\n  builder\n    .addRadio({\n      path: 'axisPlacement',\n      name: 'Placement',\n      category,\n      defaultValue: graphFieldOptions.axisPlacement[0].value,\n      settings: {\n        options: graphFieldOptions.axisPlacement,\n      },\n    })\n    .addTextInput({\n      path: 'axisLabel',\n      name: 'Label',\n      category,\n      defaultValue: '',\n      settings: {\n        placeholder: 'Optional text',\n      },\n      showIf: (c) => c.axisPlacement !== AxisPlacement.Hidden,\n      // Do not apply default settings to time and string fields which are used as x-axis fields in Time series and Bar chart panels\n      shouldApply: (f) => f.type !== FieldType.time && f.type !== FieldType.string,\n    })\n    .addNumberInput({\n      path: 'axisWidth',\n      name: 'Width',\n      category,\n      settings: {\n        placeholder: 'Auto',\n      },\n      showIf: (c) => c.axisPlacement !== AxisPlacement.Hidden,\n    })\n    .addRadio({\n      path: 'axisGridShow',\n      name: 'Show grid lines',\n      category,\n      defaultValue: undefined,\n      settings: {\n        options: [\n          { value: undefined, label: 'Auto' },\n          { value: true, label: 'On' },\n          { value: false, label: 'Off' },\n        ],\n      },\n    })\n    .addRadio({\n      path: 'axisColorMode',\n      name: 'Color',\n      category,\n      defaultValue: AxisColorMode.Text,\n      settings: {\n        options: [\n          { value: AxisColorMode.Text, label: 'Text' },\n          { value: AxisColorMode.Series, label: 'Series' },\n        ],\n      },\n    });\n\n  // options for scale range\n  builder\n    .addCustomEditor<void, ScaleDistributionConfig>({\n      id: 'scaleDistribution',\n      path: 'scaleDistribution',\n      name: 'Scale',\n      category,\n      editor: ScaleDistributionEditor as any,\n      override: ScaleDistributionEditor as any,\n      defaultValue: { type: ScaleDistribution.Linear },\n      shouldApply: (f) => f.type === FieldType.number,\n      process: identityOverrideProcessor,\n    })\n    .addBooleanSwitch({\n      path: 'axisCenteredZero',\n      name: 'Centered zero',\n      category,\n      defaultValue: false,\n      showIf: (c) => c.scaleDistribution?.type !== ScaleDistribution.Log,\n    })\n    .addNumberInput({\n      path: 'axisSoftMin',\n      name: 'Soft min',\n      defaultValue: defaultConfig.axisSoftMin,\n      category,\n      settings: {\n        placeholder: 'See: Standard options > Min',\n      },\n    })\n    .addNumberInput({\n      path: 'axisSoftMax',\n      name: 'Soft max',\n      defaultValue: defaultConfig.axisSoftMax,\n      category,\n      settings: {\n        placeholder: 'See: Standard options > Max',\n      },\n    });\n}\n\nconst DISTRIBUTION_OPTIONS: Array<SelectableValue<ScaleDistribution>> = [\n  {\n    label: 'Linear',\n    value: ScaleDistribution.Linear,\n  },\n  {\n    label: 'Logarithmic',\n    value: ScaleDistribution.Log,\n  },\n  {\n    label: 'Symlog',\n    value: ScaleDistribution.Symlog,\n  },\n];\n\nconst LOG_DISTRIBUTION_OPTIONS: Array<SelectableValue<number>> = [\n  {\n    label: '2',\n    value: 2,\n  },\n  {\n    label: '10',\n    value: 10,\n  },\n];\n\n/**\n * @internal\n */\nexport const ScaleDistributionEditor = ({ value, onChange }: StandardEditorProps<ScaleDistributionConfig>) => {\n  const type = value?.type ?? ScaleDistribution.Linear;\n  return (\n    <>\n      <div style={{ marginBottom: 16 }}>\n        <RadioButtonGroup\n          value={type}\n          options={DISTRIBUTION_OPTIONS}\n          onChange={(v) => {\n            onChange({\n              ...value,\n              type: v!,\n              log: v === ScaleDistribution.Linear ? undefined : value.log ?? 2,\n            });\n          }}\n        />\n      </div>\n      {(type === ScaleDistribution.Log || type === ScaleDistribution.Symlog) && (\n        <Field label=\"Log base\">\n          <Select\n            options={LOG_DISTRIBUTION_OPTIONS}\n            value={value.log ?? 2}\n            onChange={(v) => {\n              onChange({\n                ...value,\n                log: v.value!,\n              });\n            }}\n          />\n        </Field>\n      )}\n      {type === ScaleDistribution.Symlog && (\n        <Field label=\"Linear threshold\">\n          <Input\n            placeholder=\"1\"\n            value={value.linearThreshold}\n            onChange={(v) => {\n              onChange({\n                ...value,\n                linearThreshold: Number(v.currentTarget.value),\n              });\n            }}\n          />\n        </Field>\n      )}\n    </>\n  );\n};\n"],"names":["React","_a"],"mappings":"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"}