{"version":3,"file":"stacking.js","sources":["../../../../src/options/builder/stacking.tsx"],"sourcesContent":["import React from 'react';\n\nimport {\n  FieldConfigEditorBuilder,\n  FieldOverrideEditorProps,\n  FieldType,\n  identityOverrideProcessor,\n} from '@grafana/data';\nimport { StackingConfig, StackingMode } from '@grafana/schema';\n\nimport {\n  GraphFieldConfig,\n  graphFieldOptions,\n  HorizontalGroup,\n  IconButton,\n  Input,\n  RadioButtonGroup,\n  Tooltip,\n} from '../..';\n\nexport const StackingEditor: React.FC<FieldOverrideEditorProps<StackingConfig, any>> = ({\n  value,\n  context,\n  onChange,\n  item,\n}) => {\n  return (\n    <HorizontalGroup>\n      <RadioButtonGroup\n        value={value?.mode || StackingMode.None}\n        options={item.settings.options}\n        onChange={(v) => {\n          onChange({\n            ...value,\n            mode: v,\n          });\n        }}\n      />\n      {context.isOverride && value?.mode && value?.mode !== StackingMode.None && (\n        <Input\n          type=\"text\"\n          placeholder=\"Group\"\n          suffix={\n            <Tooltip content=\"Name of the stacking group\" placement=\"top\">\n              <IconButton name=\"question-circle\" />\n            </Tooltip>\n          }\n          defaultValue={value?.group}\n          onChange={(v) => {\n            onChange({\n              ...value,\n              group: v.currentTarget.value.trim(),\n            });\n          }}\n        />\n      )}\n    </HorizontalGroup>\n  );\n};\n\nexport function addStackingConfig(\n  builder: FieldConfigEditorBuilder<GraphFieldConfig>,\n  defaultConfig?: StackingConfig,\n  category = ['Graph styles']\n) {\n  builder.addCustomEditor({\n    id: 'stacking',\n    path: 'stacking',\n    name: 'Stack series',\n    category: category,\n    defaultValue: defaultConfig,\n    editor: StackingEditor,\n    override: StackingEditor,\n    settings: {\n      options: graphFieldOptions.stacking,\n    },\n    process: identityOverrideProcessor,\n    shouldApply: (f) => f.type === FieldType.number,\n  });\n}\n"],"names":["React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBO,MAAM,iBAA0E,CAAC;AAAA,EACtF,KAAA;AAAA,EACA,OAAA;AAAA,EACA,QAAA;AAAA,EACA,IAAA;AACF,CAAM,KAAA;AACJ,EACE,uBAAAA,cAAA,CAAA,aAAA,CAAC,uCACEA,cAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAA,IACC,KAAA,EAAA,CAAO,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,IAAA,KAAQ,YAAa,CAAA,IAAA;AAAA,IACnC,OAAA,EAAS,KAAK,QAAS,CAAA,OAAA;AAAA,IACvB,QAAA,EAAU,CAAC,CAAM,KAAA;AACf,MAAA,QAAA,CAAS,iCACJ,KADI,CAAA,EAAA;AAAA,QAEP,IAAM,EAAA,CAAA;AAAA,OACP,CAAA,CAAA,CAAA;AAAA,KACH;AAAA,GACF,CAAA,EACC,QAAQ,UAAc,KAAA,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAO,UAAQ,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,IAAA,MAAS,YAAa,CAAA,IAAA,oBAChEA,cAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAA,IACC,IAAK,EAAA,MAAA;AAAA,IACL,WAAY,EAAA,OAAA;AAAA,IACZ,wBACGA,cAAA,CAAA,aAAA,CAAA,OAAA,EAAA;AAAA,MAAQ,OAAQ,EAAA,4BAAA;AAAA,MAA6B,SAAU,EAAA,KAAA;AAAA,KAAA,kBACrDA,cAAA,CAAA,aAAA,CAAA,UAAA,EAAA;AAAA,MAAW,IAAK,EAAA,iBAAA;AAAA,KAAkB,CACrC,CAAA;AAAA,IAEF,cAAc,KAAO,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,KAAA,CAAA,KAAA;AAAA,IACrB,QAAA,EAAU,CAAC,CAAM,KAAA;AACf,MAAA,QAAA,CAAS,iCACJ,KADI,CAAA,EAAA;AAAA,QAEP,KAAO,EAAA,CAAA,CAAE,aAAc,CAAA,KAAA,CAAM,IAAK,EAAA;AAAA,OACnC,CAAA,CAAA,CAAA;AAAA,KACH;AAAA,GACF,CAEJ,CAAA,CAAA;AAEJ,EAAA;AAEO,SAAS,kBACd,OACA,EAAA,aAAA,EACA,QAAW,GAAA,CAAC,cAAc,CAC1B,EAAA;AACA,EAAA,OAAA,CAAQ,eAAgB,CAAA;AAAA,IACtB,EAAI,EAAA,UAAA;AAAA,IACJ,IAAM,EAAA,UAAA;AAAA,IACN,IAAM,EAAA,cAAA;AAAA,IACN,QAAA;AAAA,IACA,YAAc,EAAA,aAAA;AAAA,IACd,MAAQ,EAAA,cAAA;AAAA,IACR,QAAU,EAAA,cAAA;AAAA,IACV,QAAU,EAAA;AAAA,MACR,SAAS,iBAAkB,CAAA,QAAA;AAAA,KAC7B;AAAA,IACA,OAAS,EAAA,yBAAA;AAAA,IACT,WAAa,EAAA,CAAC,CAAM,KAAA,CAAA,CAAE,SAAS,SAAU,CAAA,MAAA;AAAA,GAC1C,CAAA,CAAA;AACH;;;;"}