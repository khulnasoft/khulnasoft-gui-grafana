{"version":3,"file":"icon.js","sources":["../../../src/types/icon.ts"],"sourcesContent":["import { availableIconsIndex, Field, FieldType, IconName } from '@grafana/data';\n\nimport { ComponentSize } from './size';\n\n// Exported from here for backwards compatibility\nexport type { IconName } from '@grafana/data';\nexport { toIconName } from '@grafana/data';\n\nexport type IconType = 'mono' | 'default' | 'solid';\nexport type IconSize = ComponentSize | 'xl' | 'xxl' | 'xxxl';\n\n// function remains for backwards compatibility\nexport const getAvailableIcons = () => Object.keys(availableIconsIndex);\n\n/** Get the icon for a given field type */\nexport function getFieldTypeIcon(field?: Field): IconName {\n  if (field) {\n    switch (field.type) {\n      case FieldType.time:\n        return 'clock-nine';\n      case FieldType.string:\n        return 'font';\n      case FieldType.number:\n        return 'calculator-alt';\n      case FieldType.boolean:\n        return 'toggle-on';\n      case FieldType.trace:\n        return 'info-circle';\n      case FieldType.geo:\n        return 'map-marker';\n      case FieldType.other:\n        return 'brackets-curly';\n    }\n  }\n  return 'question-circle';\n}\n"],"names":[],"mappings":";;;AAYO,MAAM,iBAAoB,GAAA,MAAM,MAAO,CAAA,IAAA,CAAK,mBAAmB,EAAA;AAG/D,SAAS,iBAAiB,KAAyB,EAAA;AACxD,EAAA,IAAI,KAAO,EAAA;AACT,IAAA,QAAQ,MAAM,IAAM;AAAA,MAClB,KAAK,SAAU,CAAA,IAAA;AACb,QAAO,OAAA,YAAA,CAAA;AAAA,MACT,KAAK,SAAU,CAAA,MAAA;AACb,QAAO,OAAA,MAAA,CAAA;AAAA,MACT,KAAK,SAAU,CAAA,MAAA;AACb,QAAO,OAAA,gBAAA,CAAA;AAAA,MACT,KAAK,SAAU,CAAA,OAAA;AACb,QAAO,OAAA,WAAA,CAAA;AAAA,MACT,KAAK,SAAU,CAAA,KAAA;AACb,QAAO,OAAA,aAAA,CAAA;AAAA,MACT,KAAK,SAAU,CAAA,GAAA;AACb,QAAO,OAAA,YAAA,CAAA;AAAA,MACT,KAAK,SAAU,CAAA,KAAA;AACb,QAAO,OAAA,gBAAA,CAAA;AAAA,KACX;AAAA,GACF;AACA,EAAO,OAAA,iBAAA,CAAA;AACT;;;;"}