{"version":3,"file":"ConfirmButton.js","sources":["../../../../src/components/ConfirmButton/ConfirmButton.tsx"],"sourcesContent":["import { cx, css } from '@emotion/css';\nimport React, { PureComponent, ReactElement } from 'react';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { stylesFactory, withTheme2 } from '../../themes';\nimport { Themeable2 } from '../../types';\nimport { ComponentSize } from '../../types/size';\nimport { Button, ButtonVariant } from '../Button';\n\nexport interface Props extends Themeable2 {\n  /** Confirm action callback */\n  onConfirm(): void;\n  children: string | ReactElement;\n  /** Custom button styles */\n  className?: string;\n  /** Button size */\n  size?: ComponentSize;\n  /** Text for the Confirm button */\n  confirmText?: string;\n  /** Disable button click action */\n  disabled?: boolean;\n  /** Variant of the Confirm button */\n  confirmVariant?: ButtonVariant;\n  /** Hide confirm actions when after of them is clicked */\n  closeOnConfirm?: boolean;\n  /** Move focus to button when mounted */\n  autoFocus?: boolean;\n\n  /** Optional on click handler for the original button */\n  onClick?(): void;\n  /** Callback for the cancel action */\n  onCancel?(): void;\n}\n\ninterface State {\n  showConfirm: boolean;\n}\n\nclass UnThemedConfirmButton extends PureComponent<Props, State> {\n  mainButtonRef = React.createRef<HTMLButtonElement>();\n  confirmButtonRef = React.createRef<HTMLButtonElement>();\n  state: State = {\n    showConfirm: false,\n  };\n\n  onClickButton = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n\n    this.setState(\n      {\n        showConfirm: true,\n      },\n      () => {\n        if (this.props.autoFocus && this.confirmButtonRef.current) {\n          this.confirmButtonRef.current.focus();\n        }\n      }\n    );\n\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  };\n\n  onClickCancel = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.setState(\n      {\n        showConfirm: false,\n      },\n      () => {\n        this.mainButtonRef.current?.focus();\n      }\n    );\n    if (this.props.onCancel) {\n      this.props.onCancel();\n    }\n  };\n  onConfirm = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (event) {\n      event.preventDefault();\n    }\n    this.props.onConfirm();\n    if (this.props.closeOnConfirm) {\n      this.setState({\n        showConfirm: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      theme,\n      className,\n      size,\n      disabled,\n      confirmText,\n      confirmVariant: confirmButtonVariant,\n      children,\n    } = this.props;\n    const styles = getStyles(theme);\n    const buttonClass = cx(\n      className,\n      this.state.showConfirm ? styles.buttonHide : styles.buttonShow,\n      disabled && styles.buttonDisabled\n    );\n    const confirmButtonClass = cx(\n      styles.confirmButton,\n      this.state.showConfirm ? styles.confirmButtonShow : styles.confirmButtonHide\n    );\n\n    const onClick = disabled ? () => {} : this.onClickButton;\n\n    return (\n      <span className={styles.buttonContainer}>\n        <div className={cx(disabled && styles.disabled)}>\n          <span className={buttonClass}>\n            {typeof children === 'string' ? (\n              <Button size={size} fill=\"text\" onClick={onClick} ref={this.mainButtonRef}>\n                {children}\n              </Button>\n            ) : (\n              React.cloneElement(children, { onClick, ref: this.mainButtonRef })\n            )}\n          </span>\n        </div>\n        <span className={confirmButtonClass}>\n          <Button size={size} variant={confirmButtonVariant} onClick={this.onConfirm} ref={this.confirmButtonRef}>\n            {confirmText}\n          </Button>\n          <Button size={size} fill=\"text\" onClick={this.onClickCancel}>\n            Cancel\n          </Button>\n        </span>\n      </span>\n    );\n  }\n}\n\nexport const ConfirmButton = withTheme2(UnThemedConfirmButton);\n\nconst getStyles = stylesFactory((theme: GrafanaTheme2) => {\n  return {\n    buttonContainer: css({\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n    }),\n    buttonDisabled: css({\n      textDecoration: 'none',\n      color: theme.colors.text.primary,\n      opacity: 0.65,\n      pointerEvents: 'none',\n    }),\n    buttonShow: css({\n      opacity: 1,\n      transition: 'opacity 0.1s ease',\n      zIndex: 2,\n    }),\n    buttonHide: css({\n      opacity: 0,\n      transition: 'opacity 0.1s ease, visibility 0 0.1s',\n      visibility: 'hidden',\n      zIndex: 0,\n    }),\n    confirmButton: css({\n      alignItems: 'flex-start',\n      background: theme.colors.background.primary,\n      display: 'flex',\n      position: 'absolute',\n      pointerEvents: 'none',\n    }),\n    confirmButtonShow: css({\n      zIndex: 1,\n      opacity: 1,\n      transition: 'opacity 0.08s ease-out, transform 0.1s ease-out',\n      transform: 'translateX(0)',\n      pointerEvents: 'all',\n    }),\n    confirmButtonHide: css({\n      opacity: 0,\n      visibility: 'hidden',\n      transition: 'opacity 0.12s ease-in, transform 0.14s ease-in, visibility 0s 0.12s',\n      transform: 'translateX(100px)',\n    }),\n    disabled: css({\n      cursor: 'not-allowed',\n    }),\n  };\n});\n\n// Declare defaultProps directly on the themed component so they are displayed\n// in the props table\nConfirmButton.defaultProps = {\n  size: 'md',\n  confirmText: 'Save',\n  disabled: false,\n  confirmVariant: 'primary',\n};\nConfirmButton.displayName = 'ConfirmButton';\n"],"names":["React"],"mappings":"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"}