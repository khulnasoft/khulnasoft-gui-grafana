{"version":3,"file":"CalendarBody.js","sources":["../../../../../src/components/DateTimePickers/TimeRangePicker/CalendarBody.tsx"],"sourcesContent":["import { css } from '@emotion/css';\nimport React, { useCallback } from 'react';\nimport Calendar from 'react-calendar';\n\nimport { GrafanaTheme2, dateTimeParse, DateTime, TimeZone, getZone } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { Icon } from '../../Icon/Icon';\n\nimport { TimePickerCalendarProps } from './TimePickerCalendar';\n\nexport function Body({ onChange, from, to, timeZone }: TimePickerCalendarProps) {\n  const value = inputToValue(from, to, new Date(), timeZone);\n  const onCalendarChange = useOnCalendarChange(onChange, timeZone);\n  const styles = useStyles2(getBodyStyles);\n\n  return (\n    <Calendar\n      selectRange={true}\n      next2Label={null}\n      prev2Label={null}\n      className={styles.body}\n      tileClassName={styles.title}\n      value={value}\n      nextLabel={<Icon name=\"angle-right\" />}\n      prevLabel={<Icon name=\"angle-left\" />}\n      onChange={onCalendarChange}\n      locale=\"en\"\n    />\n  );\n}\n\nBody.displayName = 'Body';\n\nexport function inputToValue(\n  from: DateTime,\n  to: DateTime,\n  invalidDateDefault: Date = new Date(),\n  timezone?: string\n): [Date, Date] {\n  let fromAsDate = from.isValid() ? from.toDate() : invalidDateDefault;\n  let toAsDate = to.isValid() ? to.toDate() : invalidDateDefault;\n\n  if (timezone) {\n    [fromAsDate, toAsDate] = adjustDateForReactCalendar(fromAsDate, toAsDate, timezone);\n  }\n\n  if (fromAsDate > toAsDate) {\n    return [toAsDate, fromAsDate];\n  }\n\n  return [fromAsDate, toAsDate];\n}\n\n/**\n * React calendar doesn't support showing ranges in other time zones, so attempting to show\n * 10th midnight - 11th midnight in another time zone than your browsers will span three days\n * instead of two.\n *\n * This function adjusts the dates by \"moving\" the time to appear as if it's local.\n * e.g. make 5 PM New York \"look like\" 5 PM in the user's local browser time.\n * See also https://github.com/wojtekmaj/react-calendar/issues/511#issuecomment-835333976\n */\nfunction adjustDateForReactCalendar(from: Date, to: Date, timeZone: string): [Date, Date] {\n  const zone = getZone(timeZone);\n  if (!zone) {\n    return [from, to];\n  }\n\n  // get utc offset for timezone preference\n  const timezonePrefFromOffset = zone.utcOffset(from.getTime());\n  const timezonePrefToOffset = zone.utcOffset(to.getTime());\n\n  // get utc offset for local timezone\n  const localFromOffset = from.getTimezoneOffset();\n  const localToOffset = to.getTimezoneOffset();\n\n  // calculate difference between timezone preference and local timezone\n  // we keep these as separate variables in case one of them crosses a daylight savings boundary\n  const fromDiff = timezonePrefFromOffset - localFromOffset;\n  const toDiff = timezonePrefToOffset - localToOffset;\n\n  const newFromDate = new Date(from.getTime() - fromDiff * 1000 * 60);\n  const newToDate = new Date(to.getTime() - toDiff * 1000 * 60);\n  return [newFromDate, newToDate];\n}\n\nfunction useOnCalendarChange(onChange: (from: DateTime, to: DateTime) => void, timeZone?: TimeZone) {\n  return useCallback<NonNullable<React.ComponentProps<typeof Calendar>['onChange']>>(\n    (value) => {\n      if (!Array.isArray(value)) {\n        return console.error('onCalendarChange: should be run in selectRange={true}');\n      }\n\n      if (value[0] && value[1]) {\n        const from = dateTimeParse(dateInfo(value[0]), { timeZone });\n        const to = dateTimeParse(dateInfo(value[1]), { timeZone });\n\n        onChange(from, to);\n      }\n    },\n    [onChange, timeZone]\n  );\n}\n\nfunction dateInfo(date: Date): number[] {\n  return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds()];\n}\n\nexport const getBodyStyles = (theme: GrafanaTheme2) => {\n  // If a time range is part of only 1 day but does not encompass the whole day,\n  // the class that react-calendar uses is '--hasActive' by itself (without being part of a '--range')\n  const hasActiveSelector = `.react-calendar__tile--hasActive:not(.react-calendar__tile--range)`;\n  return {\n    title: css({\n      color: theme.colors.text.primary,\n      backgroundColor: theme.colors.background.primary,\n      fontSize: theme.typography.size.md,\n      border: '1px solid transparent',\n\n      '&:hover': {\n        position: 'relative',\n      },\n\n      '&:disabled': {\n        color: theme.colors.action.disabledText,\n      },\n    }),\n    body: css({\n      zIndex: theme.zIndex.modal,\n      backgroundColor: theme.colors.background.primary,\n      width: '268px',\n\n      '.react-calendar__navigation': {\n        display: 'flex',\n      },\n\n      '.react-calendar__navigation__label, .react-calendar__navigation__arrow, .react-calendar__navigation': {\n        paddingTop: '4px',\n        backgroundColor: 'inherit',\n        color: theme.colors.text.primary,\n        border: 0,\n        fontWeight: theme.typography.fontWeightMedium,\n      },\n\n      '.react-calendar__month-view__weekdays': {\n        backgroundColor: 'inherit',\n        textAlign: 'center',\n        color: theme.colors.primary.text,\n\n        abbr: {\n          border: 0,\n          textDecoration: 'none',\n          cursor: 'default',\n          display: 'block',\n          padding: '4px 0 4px 0',\n        },\n      },\n\n      '.react-calendar__month-view__days': {\n        backgroundColor: 'inherit',\n      },\n\n      '.react-calendar__tile, .react-calendar__tile--now': {\n        marginBottom: '4px',\n        backgroundColor: 'inherit',\n        height: '26px',\n      },\n\n      '.react-calendar__navigation__label, .react-calendar__navigation > button:focus, .time-picker-calendar-tile:focus':\n        {\n          outline: 0,\n        },\n\n      [`${hasActiveSelector}, .react-calendar__tile--active, .react-calendar__tile--active:hover`]: {\n        color: theme.colors.primary.contrastText,\n        fontWeight: theme.typography.fontWeightMedium,\n        background: theme.colors.primary.main,\n        boxShadow: 'none',\n        border: '0px',\n      },\n\n      '.react-calendar__tile--rangeEnd, .react-calendar__tile--rangeStart': {\n        padding: 0,\n        border: '0px',\n        color: theme.colors.primary.contrastText,\n        fontWeight: theme.typography.fontWeightMedium,\n        background: theme.colors.primary.main,\n\n        abbr: {\n          backgroundColor: theme.colors.primary.main,\n          borderRadius: '100px',\n          display: 'block',\n          paddingTop: '2px',\n          height: '26px',\n        },\n      },\n\n      [`${hasActiveSelector}, .react-calendar__tile--rangeStart`]: {\n        borderTopLeftRadius: '20px',\n        borderBottomLeftRadius: '20px',\n      },\n\n      [`${hasActiveSelector}, .react-calendar__tile--rangeEnd`]: {\n        borderTopRightRadius: '20px',\n        borderBottomRightRadius: '20px',\n      },\n    }),\n  };\n};\n"],"names":["React"],"mappings":"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"}