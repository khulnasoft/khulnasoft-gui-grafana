{"version":3,"file":"ReactMonacoEditor.js","sources":["../../../../src/components/Monaco/ReactMonacoEditor.tsx"],"sourcesContent":["import MonacoEditor, { loader as monacoEditorLoader, Monaco } from '@monaco-editor/react';\nimport React, { useCallback } from 'react';\n\nimport { useTheme2 } from '../../themes';\n\nimport defineThemes from './theme';\nimport type { ReactMonacoEditorProps } from './types';\n\nmonacoEditorLoader.config({\n  paths: {\n    vs: (window.__grafana_public_path__ ?? 'public/') + 'lib/monaco/min/vs',\n  },\n});\n\nexport const ReactMonacoEditor = (props: ReactMonacoEditorProps) => {\n  const { beforeMount } = props;\n\n  const theme = useTheme2();\n  const onMonacoBeforeMount = useCallback(\n    (monaco: Monaco) => {\n      defineThemes(monaco, theme);\n      beforeMount?.(monaco);\n    },\n    [beforeMount, theme]\n  );\n\n  return (\n    <MonacoEditor\n      {...props}\n      theme={theme.isDark ? 'grafana-dark' : 'grafana-light'}\n      beforeMount={onMonacoBeforeMount}\n    />\n  );\n};\n"],"names":["monacoEditorLoader","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,EAAA,CAAA;AAQAA,MAAA,CAAmB,MAAO,CAAA;AAAA,EACxB,KAAO,EAAA;AAAA,IACL,EAAK,EAAA,CAAA,CAAA,EAAA,GAAA,MAAA,CAAO,uBAAP,KAAA,IAAA,GAAA,EAAA,GAAkC,SAAa,IAAA,mBAAA;AAAA,GACtD;AACF,CAAC,CAAA,CAAA;AAEY,MAAA,iBAAA,GAAoB,CAAC,KAAkC,KAAA;AAClE,EAAM,MAAA,EAAE,aAAgB,GAAA,KAAA,CAAA;AAExB,EAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AACxB,EAAA,MAAM,mBAAsB,GAAA,WAAA;AAAA,IAC1B,CAAC,MAAmB,KAAA;AAClB,MAAA,YAAA,CAAa,QAAQ,KAAK,CAAA,CAAA;AAC1B,MAAc,WAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAA,WAAA,CAAA,MAAA,CAAA,CAAA;AAAA,KAChB;AAAA,IACA,CAAC,aAAa,KAAK,CAAA;AAAA,GACrB,CAAA;AAEA,EACE,uBAAAC,cAAA,CAAA,aAAA;AAAA,IAAC,YAAA;AAAA,IAAA,aAAA,CAAA,cAAA,CAAA,EAAA,EACK,KADL,CAAA,EAAA;AAAA,MAEC,KAAA,EAAO,KAAM,CAAA,MAAA,GAAS,cAAiB,GAAA,eAAA;AAAA,MACvC,WAAa,EAAA,mBAAA;AAAA,KAAA,CAAA;AAAA,GACf,CAAA;AAEJ;;;;"}