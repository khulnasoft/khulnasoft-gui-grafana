{"version":3,"file":"SeriesIcon.js","sources":["../../../../src/components/VizLegend/SeriesIcon.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { CSSProperties } from 'react';\n\nimport { fieldColorModeRegistry } from '@grafana/data';\n\nimport { useTheme2, useStyles2 } from '../../themes';\n\nexport interface Props extends React.HTMLAttributes<HTMLDivElement> {\n  color?: string;\n  gradient?: string;\n}\n\nexport const SeriesIcon = React.memo(\n  React.forwardRef<HTMLDivElement, Props>(({ color, className, gradient, ...restProps }, ref) => {\n    const theme = useTheme2();\n    const styles2 = useStyles2(getStyles);\n\n    let cssColor: string;\n\n    if (gradient) {\n      const colors = fieldColorModeRegistry.get(gradient).getColors?.(theme);\n      if (colors?.length) {\n        cssColor = `linear-gradient(90deg, ${colors.join(', ')})`;\n      } else {\n        // Not sure what to default to, this will return gray, this should not happen though.\n        cssColor = theme.visualization.getColorByName('');\n      }\n    } else {\n      cssColor = color!;\n    }\n\n    const styles: CSSProperties = {\n      background: cssColor,\n      width: '14px',\n      height: '4px',\n      borderRadius: theme.shape.radius.pill,\n      display: 'inline-block',\n      marginRight: '8px',\n    };\n\n    return (\n      <div\n        data-testid=\"series-icon\"\n        ref={ref}\n        className={cx(className, styles2.forcedColors)}\n        style={styles}\n        {...restProps}\n      />\n    );\n  })\n);\n\nconst getStyles = () => ({\n  forcedColors: css({\n    '@media (forced-colors: active)': {\n      forcedColorAdjust: 'none',\n    },\n  }),\n});\n\nSeriesIcon.displayName = 'SeriesIcon';\n"],"names":["React","_a","_b"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYO,MAAM,aAAaA,cAAM,CAAA,IAAA;AAAA,EAC9BA,cAAM,CAAA,UAAA,CAAkC,CAAC,EAAA,EAA8C,GAAQ,KAAA;AAAtD,IAAE,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,KAAA,EAAO,WAAW,QAb/D,EAAA,GAa2C,IAAiC,SAAjC,GAAA,SAAA,CAAA,EAAA,EAAiC,CAA/B,OAAA,EAAO,WAAW,EAAA,UAAA,CAAA,CAAA,CAAA;AAb/D,IAAA,IAAAC,GAAAC,EAAAA,GAAAA,CAAAA;AAcI,IAAA,MAAM,QAAQ,SAAU,EAAA,CAAA;AACxB,IAAM,MAAA,OAAA,GAAU,WAAW,SAAS,CAAA,CAAA;AAEpC,IAAI,IAAA,QAAA,CAAA;AAEJ,IAAA,IAAI,QAAU,EAAA;AACZ,MAAM,MAAA,MAAA,GAAA,CAASA,GAAAD,GAAAA,CAAAA,GAAAA,GAAA,sBAAuB,CAAA,GAAA,CAAI,QAAQ,CAAA,EAAE,SAArC,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAC,GAAA,CAAA,IAAA,CAAAD,GAAiD,EAAA,KAAA,CAAA,CAAA;AAChE,MAAA,IAAI,iCAAQ,MAAQ,EAAA;AAClB,QAAA,QAAA,GAAW,CAA0B,uBAAA,EAAA,MAAA,CAAO,IAAK,CAAA,IAAI,CAAC,CAAA,CAAA,CAAA,CAAA;AAAA,OACjD,MAAA;AAEL,QAAW,QAAA,GAAA,KAAA,CAAM,aAAc,CAAA,cAAA,CAAe,EAAE,CAAA,CAAA;AAAA,OAClD;AAAA,KACK,MAAA;AACL,MAAW,QAAA,GAAA,KAAA,CAAA;AAAA,KACb;AAEA,IAAA,MAAM,MAAwB,GAAA;AAAA,MAC5B,UAAY,EAAA,QAAA;AAAA,MACZ,KAAO,EAAA,MAAA;AAAA,MACP,MAAQ,EAAA,KAAA;AAAA,MACR,YAAA,EAAc,KAAM,CAAA,KAAA,CAAM,MAAO,CAAA,IAAA;AAAA,MACjC,OAAS,EAAA,cAAA;AAAA,MACT,WAAa,EAAA,KAAA;AAAA,KACf,CAAA;AAEA,IACE,uBAAAD,cAAA,CAAA,aAAA;AAAA,MAAC,KAAA;AAAA,MAAA,cAAA,CAAA;AAAA,QACC,aAAY,EAAA,aAAA;AAAA,QACZ,GAAA;AAAA,QACA,SAAW,EAAA,EAAA,CAAG,SAAW,EAAA,OAAA,CAAQ,YAAY,CAAA;AAAA,QAC7C,KAAO,EAAA,MAAA;AAAA,OACH,EAAA,SAAA,CAAA;AAAA,KACN,CAAA;AAAA,GAEH,CAAA;AACH,EAAA;AAEA,MAAM,YAAY,OAAO;AAAA,EACvB,cAAc,GAAI,CAAA;AAAA,IAChB,gCAAkC,EAAA;AAAA,MAChC,iBAAmB,EAAA,MAAA;AAAA,KACrB;AAAA,GACD,CAAA;AACH,CAAA,CAAA,CAAA;AAEA,UAAA,CAAW,WAAc,GAAA,YAAA;;;;"}