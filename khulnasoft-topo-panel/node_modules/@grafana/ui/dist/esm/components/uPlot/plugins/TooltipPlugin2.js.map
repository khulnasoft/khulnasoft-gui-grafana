{"version":3,"file":"TooltipPlugin2.js","sources":["../../../../../src/components/uPlot/plugins/TooltipPlugin2.tsx"],"sourcesContent":["import { css, cx } from '@emotion/css';\nimport React, { useLayoutEffect, useRef, useReducer, CSSProperties, useContext, useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport uPlot from 'uplot';\n\nimport { GrafanaTheme2 } from '@grafana/data';\n\nimport { useStyles2 } from '../../../themes';\nimport { LayoutItemContext } from '../../Layout/LayoutItemContext';\nimport { UPlotConfigBuilder } from '../config/UPlotConfigBuilder';\n\nimport { CloseButton } from './CloseButton';\n\nexport const DEFAULT_TOOLTIP_WIDTH = undefined;\nexport const DEFAULT_TOOLTIP_HEIGHT = undefined;\nexport const TOOLTIP_OFFSET = 10;\n\n// todo: barchart? histogram?\nexport const enum TooltipHoverMode {\n  // Single mode in TimeSeries, Candlestick, Trend, StateTimeline, Heatmap?\n  xOne,\n  // All mode in TimeSeries, Candlestick, Trend, StateTimeline, Heatmap?\n  xAll,\n  // Single mode in XYChart, Heatmap?\n  xyOne,\n}\n\ninterface TooltipPlugin2Props {\n  config: UPlotConfigBuilder;\n  hoverMode: TooltipHoverMode;\n\n  // x only\n  queryZoom?: (range: { from: number; to: number }) => void;\n  // y-only, via shiftKey\n  clientZoom?: boolean;\n\n  render: (\n    u: uPlot,\n    dataIdxs: Array<number | null>,\n    seriesIdx: number | null,\n    isPinned: boolean,\n    dismiss: () => void,\n    // selected time range (for annotation triggering)\n    timeRange: TimeRange2 | null,\n    viaSync: boolean\n  ) => React.ReactNode;\n\n  maxWidth?: number;\n  maxHeight?: number;\n}\n\ninterface TooltipContainerState {\n  plot?: uPlot | null;\n  style: Partial<CSSProperties>;\n  isHovering: boolean;\n  isPinned: boolean;\n  dismiss: () => void;\n  contents?: React.ReactNode;\n}\n\ninterface TooltipContainerSize {\n  observer: ResizeObserver;\n  width: number;\n  height: number;\n}\n\nexport interface TimeRange2 {\n  from: number;\n  to: number;\n}\n\nfunction mergeState(prevState: TooltipContainerState, nextState: Partial<TooltipContainerState>) {\n  return {\n    ...prevState,\n    ...nextState,\n    style: {\n      ...prevState.style,\n      ...nextState.style,\n    },\n  };\n}\n\nconst INITIAL_STATE: TooltipContainerState = {\n  style: { transform: '', pointerEvents: 'none' },\n  isHovering: false,\n  isPinned: false,\n  contents: null,\n  plot: null,\n  dismiss: () => {},\n};\n\n// min px width that triggers zoom\nconst MIN_ZOOM_DIST = 5;\n\nconst maybeZoomAction = (e?: MouseEvent | null) => e != null && !e.ctrlKey && !e.metaKey;\n\n/**\n * @alpha\n */\nexport const TooltipPlugin2 = ({\n  config,\n  hoverMode,\n  render,\n  clientZoom = false,\n  queryZoom,\n  maxWidth,\n  maxHeight,\n}: TooltipPlugin2Props) => {\n  const domRef = useRef<HTMLDivElement>(null);\n\n  const [{ plot, isHovering, isPinned, contents, style, dismiss }, setState] = useReducer(mergeState, INITIAL_STATE);\n\n  const { boostZIndex } = useContext(LayoutItemContext);\n  useEffect(() => (isPinned ? boostZIndex() : undefined), [isPinned]);\n\n  const sizeRef = useRef<TooltipContainerSize>();\n\n  maxWidth = isPinned ? DEFAULT_TOOLTIP_WIDTH : maxWidth ?? DEFAULT_TOOLTIP_WIDTH;\n  maxHeight ??= DEFAULT_TOOLTIP_HEIGHT;\n  const styles = useStyles2(getStyles, maxWidth, maxHeight);\n\n  const renderRef = useRef(render);\n  renderRef.current = render;\n\n  useLayoutEffect(() => {\n    sizeRef.current = {\n      width: 0,\n      height: 0,\n      observer: new ResizeObserver((entries) => {\n        let size = sizeRef.current!;\n\n        for (const entry of entries) {\n          if (entry.borderBoxSize?.length > 0) {\n            size.width = entry.borderBoxSize[0].inlineSize;\n            size.height = entry.borderBoxSize[0].blockSize;\n          } else {\n            size.width = entry.contentRect.width;\n            size.height = entry.contentRect.height;\n          }\n        }\n      }),\n    };\n\n    let yZoomed = false;\n    let yDrag = false;\n\n    let _plot = plot;\n    let _isHovering = isHovering;\n    let _someSeriesIdx = false;\n    let _isPinned = isPinned;\n    let _style = style;\n\n    const updateHovering = () => {\n      _isHovering = closestSeriesIdx != null || (hoverMode === TooltipHoverMode.xAll && _someSeriesIdx);\n    };\n\n    let offsetX = 0;\n    let offsetY = 0;\n\n    let containRect = {\n      lft: 0,\n      top: 0,\n      rgt: screen.width,\n      btm: screen.height,\n    };\n\n    let selectedRange: TimeRange2 | null = null;\n    let seriesIdxs: Array<number | null> = plot?.cursor.idxs!.slice()!;\n    let closestSeriesIdx: number | null = null;\n    let viaSync = false;\n\n    let pendingRender = false;\n    let pendingPinned = false;\n\n    const scheduleRender = (setPinned = false) => {\n      if (!pendingRender) {\n        // defer unrender for 100ms to reduce flickering in small gaps\n        if (!_isHovering) {\n          setTimeout(_render, 100);\n        } else {\n          queueMicrotask(_render);\n        }\n\n        pendingRender = true;\n      }\n\n      if (setPinned) {\n        pendingPinned = true;\n      }\n    };\n\n    // in some ways this is similar to ClickOutsideWrapper.tsx\n    const downEventOutside = (e: Event) => {\n      // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n      if (!domRef.current!.contains(e.target as Node)) {\n        dismiss();\n      }\n    };\n\n    const _render = () => {\n      pendingRender = false;\n\n      if (pendingPinned) {\n        _style = { pointerEvents: _isPinned ? 'all' : 'none' };\n\n        // @ts-ignore\n        _plot!.cursor._lock = _isPinned;\n\n        if (_isPinned) {\n          document.addEventListener('mousedown', downEventOutside, true);\n          document.addEventListener('keydown', downEventOutside, true);\n        } else {\n          document.removeEventListener('mousedown', downEventOutside, true);\n          document.removeEventListener('keydown', downEventOutside, true);\n        }\n\n        pendingPinned = false;\n      }\n\n      let state: TooltipContainerState = {\n        style: _style,\n        isPinned: _isPinned,\n        isHovering: _isHovering,\n        contents:\n          _isHovering || selectedRange != null\n            ? renderRef.current(_plot!, seriesIdxs, closestSeriesIdx, _isPinned, dismiss, selectedRange, viaSync)\n            : null,\n        dismiss,\n      };\n\n      setState(state);\n\n      selectedRange = null;\n      viaSync = false;\n    };\n\n    const dismiss = () => {\n      let prevIsPinned = _isPinned;\n      _isPinned = false;\n      _isHovering = false;\n      _plot!.setCursor({ left: -10, top: -10 });\n      scheduleRender(prevIsPinned);\n    };\n\n    config.addHook('init', (u) => {\n      setState({ plot: (_plot = u) });\n\n      // detect shiftKey and mutate drag mode from x-only to y-only\n      if (clientZoom) {\n        u.over.addEventListener(\n          'mousedown',\n          (e) => {\n            if (!maybeZoomAction(e)) {\n              return;\n            }\n\n            if (e.button === 0 && e.shiftKey) {\n              yDrag = true;\n\n              u.cursor.drag!.x = false;\n              u.cursor.drag!.y = true;\n\n              let onUp = (e: MouseEvent) => {\n                u.cursor.drag!.x = true;\n                u.cursor.drag!.y = false;\n                document.removeEventListener('mouseup', onUp, true);\n              };\n\n              document.addEventListener('mouseup', onUp, true);\n            }\n          },\n          true\n        );\n      }\n\n      // this handles pinning\n      u.over.addEventListener('click', (e) => {\n        if (e.target === u.over) {\n          if (e.ctrlKey || e.metaKey) {\n            let xVal = u.posToVal(u.cursor.left!, 'x');\n\n            selectedRange = {\n              from: xVal,\n              to: xVal,\n            };\n\n            scheduleRender(false);\n          }\n          // only pinnable tooltip is visible *and* is within proximity to series/point\n          else if (_isHovering && closestSeriesIdx != null && !_isPinned) {\n            _isPinned = true;\n            scheduleRender(true);\n          }\n        }\n      });\n\n      const haltAncestorId = 'pageContent';\n      const scrollbarWidth = 16;\n\n      // if we're in a container that can clip the tooltip, we should try to stay within that rather than window edges\n      u.over.addEventListener(\n        'mouseenter',\n        () => {\n          // clamp to viewport bounds\n          let htmlEl = document.documentElement;\n          let winWid = htmlEl.clientWidth - scrollbarWidth;\n          let winHgt = htmlEl.clientHeight - scrollbarWidth;\n\n          let lft = 0,\n            top = 0,\n            rgt = winWid,\n            btm = winHgt;\n\n          // find nearest scrollable container where overflow is not visible, (stop at #pageContent)\n          let par: HTMLElement | null = u.root;\n\n          while (par != null && par.id !== haltAncestorId) {\n            let style = getComputedStyle(par);\n            let overflowX = style.getPropertyValue('overflow-x');\n            let overflowY = style.getPropertyValue('overflow-y');\n\n            if (overflowX !== 'visible' || overflowY !== 'visible') {\n              let rect = par.getBoundingClientRect();\n              lft = Math.max(rect.x, lft);\n              top = Math.max(rect.y, top);\n              rgt = Math.min(lft + rect.width, rgt);\n              btm = Math.min(top + rect.height, btm);\n              break;\n            }\n\n            par = par.parentElement;\n          }\n\n          containRect.lft = lft;\n          containRect.top = top;\n          containRect.rgt = rgt;\n          containRect.btm = btm;\n        },\n        { capture: true }\n      );\n    });\n\n    config.addHook('setSelect', (u) => {\n      if (clientZoom || queryZoom != null) {\n        if (maybeZoomAction(u.cursor!.event)) {\n          if (clientZoom && yDrag) {\n            if (u.select.height >= MIN_ZOOM_DIST) {\n              for (let key in u.scales!) {\n                if (key !== 'x') {\n                  const maxY = u.posToVal(u.select.top, key);\n                  const minY = u.posToVal(u.select.top + u.select.height, key);\n\n                  u.setScale(key, { min: minY, max: maxY });\n                }\n              }\n\n              yZoomed = true;\n            }\n\n            yDrag = false;\n          } else if (queryZoom != null) {\n            if (u.select.width >= MIN_ZOOM_DIST) {\n              const minX = u.posToVal(u.select.left, 'x');\n              const maxX = u.posToVal(u.select.left + u.select.width, 'x');\n\n              queryZoom({ from: minX, to: maxX });\n\n              yZoomed = false;\n            }\n          }\n        } else {\n          selectedRange = {\n            from: u.posToVal(u.select.left!, 'x'),\n            to: u.posToVal(u.select.left! + u.select.width, 'x'),\n          };\n\n          scheduleRender(true);\n        }\n      }\n\n      // manually hide selected region (since cursor.drag.setScale = false)\n      u.setSelect({ left: 0, width: 0, top: 0, height: 0 }, false);\n    });\n\n    if (clientZoom || queryZoom != null) {\n      config.setCursor({\n        bind: {\n          dblclick: (u) => () => {\n            if (!maybeZoomAction(u.cursor!.event)) {\n              return null;\n            }\n\n            if (clientZoom && yZoomed) {\n              for (let key in u.scales!) {\n                if (key !== 'x') {\n                  // @ts-ignore (this is not typed correctly in uPlot, assigning nulls means auto-scale / reset)\n                  u.setScale(key, { min: null, max: null });\n                }\n              }\n\n              yZoomed = false;\n            } else if (queryZoom != null) {\n              let xScale = u.scales.x;\n\n              const frTs = xScale.min!;\n              const toTs = xScale.max!;\n              const pad = (toTs - frTs) / 2;\n\n              queryZoom({ from: frTs - pad, to: toTs + pad });\n            }\n\n            return null;\n          },\n        },\n      });\n    }\n\n    config.addHook('setData', (u) => {\n      yZoomed = false;\n      yDrag = false;\n    });\n\n    // fires on series focus/proximity changes\n    // e.g. to highlight the hovered/closest series\n    // TODO: we only need this for multi/all mode?\n    config.addHook('setSeries', (u, seriesIdx) => {\n      closestSeriesIdx = seriesIdx;\n      updateHovering();\n      scheduleRender();\n    });\n\n    // fires on data value hovers/unhovers\n    config.addHook('setLegend', (u) => {\n      seriesIdxs = _plot?.cursor!.idxs!.slice()!;\n      _someSeriesIdx = seriesIdxs.some((v, i) => i > 0 && v != null);\n\n      updateHovering();\n      scheduleRender();\n    });\n\n    // fires on mousemoves\n    config.addHook('setCursor', (u) => {\n      let { left = -10, top = -10, event } = u.cursor;\n\n      if (left >= 0 || top >= 0) {\n        viaSync = event == null;\n\n        let transform = '';\n\n        // this means it's a synthetic event from uPlot's sync\n        if (viaSync) {\n          // TODO: smarter positioning here to avoid viewport clipping?\n          transform = `translateX(${left}px) translateY(${u.rect.height / 2}px) translateY(-50%)`;\n        } else {\n          let { width, height } = sizeRef.current!;\n\n          width += TOOLTIP_OFFSET;\n          height += TOOLTIP_OFFSET;\n\n          let clientX = u.rect.left + left;\n          let clientY = u.rect.top + top;\n\n          if (offsetY !== 0) {\n            if (clientY + height < containRect.btm || clientY - height < 0) {\n              offsetY = 0;\n            } else if (offsetY !== -height) {\n              offsetY = -height;\n            }\n          } else {\n            if (clientY + height > containRect.btm && clientY - height >= 0) {\n              offsetY = -height;\n            }\n          }\n\n          if (offsetX !== 0) {\n            if (clientX + width < containRect.rgt || clientX - width < 0) {\n              offsetX = 0;\n            } else if (offsetX !== -width) {\n              offsetX = -width;\n            }\n          } else {\n            if (clientX + width > containRect.rgt && clientX - width >= 0) {\n              offsetX = -width;\n            }\n          }\n\n          const shiftX = left + (offsetX === 0 ? TOOLTIP_OFFSET : -TOOLTIP_OFFSET);\n          const shiftY = top + (offsetY === 0 ? TOOLTIP_OFFSET : -TOOLTIP_OFFSET);\n\n          const reflectX = offsetX === 0 ? '' : 'translateX(-100%)';\n          const reflectY = offsetY === 0 ? '' : 'translateY(-100%)';\n\n          // TODO: to a transition only when switching sides\n          // transition: transform 100ms;\n\n          transform = `translateX(${shiftX}px) ${reflectX} translateY(${shiftY}px) ${reflectY}`;\n        }\n\n        if (_isHovering) {\n          if (domRef.current != null) {\n            domRef.current.style.transform = transform;\n          } else {\n            _style.transform = transform;\n            scheduleRender();\n          }\n        }\n      }\n    });\n  }, [config]);\n\n  useLayoutEffect(() => {\n    const size = sizeRef.current!;\n\n    if (domRef.current != null) {\n      size.observer.observe(domRef.current);\n    }\n  }, [domRef.current]);\n\n  if (plot && isHovering) {\n    return createPortal(\n      <div className={cx(styles.tooltipWrapper, isPinned && styles.pinned)} style={style} ref={domRef}>\n        {isPinned && <CloseButton onClick={dismiss} />}\n        {contents}\n      </div>,\n      plot.over\n    );\n  }\n\n  return null;\n};\n\nconst getStyles = (theme: GrafanaTheme2, maxWidth?: number, maxHeight?: number) => ({\n  tooltipWrapper: css({\n    top: 0,\n    left: 0,\n    zIndex: theme.zIndex.tooltip,\n    whiteSpace: 'pre',\n    borderRadius: theme.shape.radius.default,\n    position: 'absolute',\n    background: theme.colors.background.primary,\n    border: `1px solid ${theme.colors.border.weak}`,\n    boxShadow: theme.shadows.z2,\n    userSelect: 'text',\n    maxWidth: maxWidth ?? 'none',\n    maxHeight: maxHeight ?? 'none',\n    overflowY: 'auto',\n  }),\n  pinned: css({\n    boxShadow: theme.shadows.z3,\n  }),\n});\n"],"names":["dismiss","e","style","React"],"mappings":"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"}