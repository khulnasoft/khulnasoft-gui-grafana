var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
function nullToValue(frame) {
  return __spreadProps(__spreadValues({}, frame), {
    fields: frame.fields.map((field) => {
      var _a;
      const noValue = +((_a = field.config) == null ? void 0 : _a.noValue);
      if (!Number.isNaN(noValue)) {
        const transformedVals = field.values.slice();
        for (let i = 0; i < transformedVals.length; i++) {
          if (transformedVals[i] === null) {
            transformedVals[i] = noValue;
          }
        }
        return __spreadProps(__spreadValues({}, field), {
          values: transformedVals
        });
      } else {
        return field;
      }
    })
  });
}

export { nullToValue };
//# sourceMappingURL=nullToValue.js.map
