{"version":3,"file":"SortedVector.js","sources":["../../../src/vector/SortedVector.ts"],"sourcesContent":["import { makeArrayIndexableVector, Vector } from '../types/vector';\n\nimport { FunctionalVector } from './FunctionalVector';\nimport { vectorToArray } from './vectorToArray';\n\n/**\n * Values are returned in the order defined by the input parameter\n *\n * @deprecated use a simple Arrays\n */\nexport class SortedVector<T = any> extends FunctionalVector<T> {\n  constructor(\n    private source: Vector<T>,\n    private order: number[]\n  ) {\n    super();\n    return makeArrayIndexableVector(this);\n  }\n\n  get length(): number {\n    return this.source.length;\n  }\n\n  get(index: number): T {\n    return this.source.get(this.order[index]);\n  }\n\n  toArray(): T[] {\n    return vectorToArray(this);\n  }\n\n  toJSON(): T[] {\n    return vectorToArray(this);\n  }\n\n  getOrderArray(): number[] {\n    return this.order;\n  }\n}\n"],"names":[],"mappings":";;;;AAUO,MAAM,qBAA8B,gBAAoB,CAAA;AAAA,EAC7D,WAAA,CACU,QACA,KACR,EAAA;AACA,IAAM,KAAA,EAAA,CAAA;AAHE,IAAA,IAAA,CAAA,MAAA,GAAA,MAAA,CAAA;AACA,IAAA,IAAA,CAAA,KAAA,GAAA,KAAA,CAAA;AAGR,IAAA,OAAO,yBAAyB,IAAI,CAAA,CAAA;AAAA,GACtC;AAAA,EAEA,IAAI,MAAiB,GAAA;AACnB,IAAA,OAAO,KAAK,MAAO,CAAA,MAAA,CAAA;AAAA,GACrB;AAAA,EAEA,IAAI,KAAkB,EAAA;AACpB,IAAA,OAAO,KAAK,MAAO,CAAA,GAAA,CAAI,IAAK,CAAA,KAAA,CAAM,KAAK,CAAC,CAAA,CAAA;AAAA,GAC1C;AAAA,EAEA,OAAe,GAAA;AACb,IAAA,OAAO,cAAc,IAAI,CAAA,CAAA;AAAA,GAC3B;AAAA,EAEA,MAAc,GAAA;AACZ,IAAA,OAAO,cAAc,IAAI,CAAA,CAAA;AAAA,GAC3B;AAAA,EAEA,aAA0B,GAAA;AACxB,IAAA,OAAO,IAAK,CAAA,KAAA,CAAA;AAAA,GACd;AACF;;;;"}