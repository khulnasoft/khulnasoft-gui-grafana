{"version":3,"file":"sampling.js","sourceRoot":"","sources":["../../../../../src/instrumentations/session/sessionManager/sampling.ts"],"names":[],"mappings":";;;AAAA,gDAA0C;AAE1C,SAAgB,SAAS;;IACvB,IAAM,cAAc,GAAG,CAAC,CAAC;IACzB,IAAM,eAAe,GAAG,gBAAI,CAAC,MAAM,CAAC,eAAe,CAAC;IACpD,IAAI,YAAY,GACd,MAAA,MAAA,MAAA,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,OAAO,gEAAG,EAAE,KAAK,EAAE,gBAAI,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,mCAAI,eAAe,aAAf,eAAe,uBAAf,eAAe,CAAE,YAAY,mCAAI,cAAc,CAAC;IAE7G,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;QACpC,IAAM,aAAa,GAAG,CAAC,CAAC;QACxB,YAAY,GAAG,aAAa,CAAC;KAC9B;IAED,OAAO,IAAI,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC;AACtC,CAAC;AAZD,8BAYC","sourcesContent":["import { faro } from '@grafana/faro-core';\n\nexport function isSampled(): boolean {\n  const sendAllSignals = 1;\n  const sessionTracking = faro.config.sessionTracking;\n  let samplingRate =\n    sessionTracking?.sampler?.({ metas: faro.metas.value }) ?? sessionTracking?.samplingRate ?? sendAllSignals;\n\n  if (typeof samplingRate !== 'number') {\n    const sendNoSignals = 0;\n    samplingRate = sendNoSignals;\n  }\n\n  return Math.random() < samplingRate;\n}\n"]}